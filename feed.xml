<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es"><generator uri="https://jekyllrb.com/" version="3.5.1">Jekyll</generator><link href="http://blog.makeitreal.camp/feed.xml" rel="self" type="application/atom+xml" /><link href="http://blog.makeitreal.camp/" rel="alternate" type="text/html" hreflang="es" /><updated>2018-08-01T12:40:11-04:00</updated><id>http://blog.makeitreal.camp/</id><title type="html">El Blog de Make it Real</title><subtitle>Un espacio para compartir conocimiento en programación y emprendimiento.</subtitle><entry><title type="html">¿Es valioso un certificado en desarrollo Web?</title><link href="http://blog.makeitreal.camp/es-valioso-un-certificado-en-desarrollo-web/" rel="alternate" type="text/html" title="¿Es valioso un certificado en desarrollo Web?" /><published>2018-01-15T02:00:00-05:00</published><updated>2018-01-15T02:00:00-05:00</updated><id>http://blog.makeitreal.camp/es-valioso-un-certificado-en-desarrollo-web</id><content type="html" xml:base="http://blog.makeitreal.camp/es-valioso-un-certificado-en-desarrollo-web/">&lt;p&gt;Aunque existen industrias donde las certificaciones son importantes, en desarrollo Web una certificación no te va a ayudar a encontrar un empleo. En este post te explicaremos por qué y cuál es la alternativa.&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;A comparación de otras industrias, el desarrollo Web es un campo muy reciente que sigue evolucionando rápidamente. Uno de nuestros mayores desafíos es que las tecnologías de hace 5 años (incluso menos) hoy ya son obsoletas.&lt;/p&gt;

&lt;p&gt;Aunque algunas empresas tradicionales todavía buscan personas con títulos en Ingeniería de Sistemas o Ciencias de la Computación como un primer filtro (la mayoría ya no lo hace), incluso esas empresas tienen sus propias pruebas técnicas y van a ignorar completamente tu certificado en desarrollo Web.&lt;/p&gt;

&lt;p&gt;Sin embargo, quizá nuestro principal argumento en contra de las certificaciones es que los títulos y las certificaciones corrompen el aprendizaje. En &lt;a href=&quot;https://makeitreal.camp/&quot; target=&quot;_blank&quot;&gt;Make it Real&lt;/a&gt; buscamos personas que estén más interesadas en aprender y crear, que en una certificación.&lt;/p&gt;

&lt;h2 id=&quot;en-vez-de-un-certificado&quot;&gt;En vez de un certificado&lt;/h2&gt;

&lt;p&gt;La mayoría de disciplinas requieren un aprendizaje continuo, pero en desarrollo Web mantenerse actualizado es particularmente importante. Es por eso que las empresas hoy se fijan más en lo que has creado y lo que sabes, que en tus títulos y certificados.&lt;/p&gt;

&lt;p&gt;En vez de buscar un certificado concéntrate en &lt;strong&gt;crear un portafolio&lt;/strong&gt;. Es la mejor forma de demostrar tus conocimientos y tu capacidad de aprendizaje. &lt;a href=&quot;http://sebastianzapata.co/&quot; target=&quot;_blank&quot;&gt;Mira cómo lo hizo Sebastián Zapata&lt;/a&gt;, uno de nuestros ex-alumnos que hoy trabaja para &lt;a href=&quot;https://cabify.com/en&quot; target=&quot;_blank&quot;&gt;Cabify&lt;/a&gt; en España.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Comparte tu conocimiento&lt;/strong&gt;. Ya sea a través de un blog o un canal de Youtube, compartir tu conocimiento te ayuda a reforzar tus conocimientos y a aumentar tu credibilidad frente a los demás. &lt;a href=&quot;https://medium.com/@estrada9166&quot; target=&quot;_blank&quot;&gt;Mira cómo lo hizo Alejandro Estrada&lt;/a&gt;, uno de nuestros ex-alumnos que hoy trabaja para una empresa de Estados Unidos llamada &lt;a href=&quot;https://www.payfully.co/&quot; target=&quot;_blank&quot;&gt;Payfully&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Asiste a encuentros con desarrolladores&lt;/strong&gt;. La forma más fácil es buscar comunidades en &lt;a href=&quot;https://www.meetup.com/&quot; target=&quot;_blank&quot;&gt;meetup.com&lt;/a&gt; y asistir a los encuentros. De esa forma vas a mantenerte actualizado(a), conocer otros desarrolladores e incluso encontrar oportunidades laborales. Mi recomendación es asistir con una actitud de aprendizaje, no esperar a que te ayuden a encontrar un empleo.&lt;/p&gt;

&lt;p&gt;Además de asisitir a los encuentros, &lt;strong&gt;prepara charlas y proponlas&lt;/strong&gt; a los organizadores. O, incluso mejor, &lt;strong&gt;inicia un nuevo Meetup&lt;/strong&gt; en tu ciudad! Así lo hizo Simón Hoyos, también ex-alumno de Make it Real, que es el co-organizador de &lt;a href=&quot;https://www.meetup.com/React-Medellin/&quot; target=&quot;_blank&quot;&gt;React en Medellín&lt;/a&gt; y hoy trabaja para &lt;a href=&quot;https://www.hugeinc.com/&quot; target=&quot;_blank&quot;&gt;HUGE Inc&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h2&gt;

&lt;p&gt;Existen muchas formas de demostrar credibilidad en desarrollo Web, pero un certificado definitivamente no es una de ellas.&lt;/p&gt;

&lt;p&gt;En &lt;a href=&quot;https://makeitreal.camp/&quot; target=&quot;_blank&quot;&gt;Make it Real&lt;/a&gt; te ofrecemos programas prácticos para que aceleres tu aprendizaje en desarrollo Web. Nuestro programa &lt;a href=&quot;https://makeitreal.camp/full-stack-online&quot; target=&quot;_blank&quot;&gt;Full Stack Web Development&lt;/a&gt; incluso te garantiza empleo cuando lo terminas, algo mucho más valioso y tangible que un certificado.&lt;/p&gt;</content><author><name>Germán Escobar</name></author><summary type="html">Aunque existen industrias donde las certificaciones son importantes, en desarrollo Web una certificación no te va a ayudar a encontrar un empleo. En este post te explicaremos por qué y cuál es la alternativa.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://s3.amazonaws.com/makeitreal/blog/images/chess.jpeg" /></entry><entry><title type="html">Manejadores de paquetes en Node.js</title><link href="http://blog.makeitreal.camp/manejadores-de-paquetes-en-nodejs/" rel="alternate" type="text/html" title="Manejadores de paquetes en Node.js" /><published>2017-12-28T02:00:00-05:00</published><updated>2017-12-28T02:00:00-05:00</updated><id>http://blog.makeitreal.camp/manejadores-de-paquetes-en-nodejs</id><content type="html" xml:base="http://blog.makeitreal.camp/manejadores-de-paquetes-en-nodejs/">&lt;p&gt;Las librerías son una parte fundamental de cualquier lenguaje de programación y nos permiten reutilizar código que otros desarrolladores han escrito y publicado. En este post vamos a hablar de &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt; y &lt;a href=&quot;https://yarnpkg.com/en/&quot;&gt;Yarn&lt;/a&gt;, los dos manejadores de paquetes más populares de &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt;.&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;A las librerías se les llama &lt;strong&gt;paquetes&lt;/strong&gt; en &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Un &lt;strong&gt;manejador de paquetes&lt;/strong&gt; nos permite descargar los &lt;strong&gt;paquetes&lt;/strong&gt; que han publicado otros desarrolladores y utilizarlos en nuestros proyectos. También nos permite crear y publicar nuestros propios &lt;strong&gt;paquetes&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt; viene con un manejador de paquetes llamado &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;.  Sin embargo, hace un par de años surgió un nuevo manejador de paquetes llamado &lt;a href=&quot;https://yarnpkg.com/en/&quot;&gt;Yarn&lt;/a&gt; que cada día toma más fuerza. Veamos cada uno en detalle.&lt;/p&gt;

&lt;h2 id=&quot;npm&quot;&gt;npm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt; es una aplicación para la línea de comandos que viene incluída en &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt;, así que no es necesario instalar nada adicional.&lt;/p&gt;

&lt;h3 id=&quot;instalando-paquetes&quot;&gt;Instalando paquetes&lt;/h3&gt;

&lt;p&gt;Con &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt; puedes instalar un paquete en tu máquina de forma &lt;strong&gt;local&lt;/strong&gt; (en una carpeta) o &lt;strong&gt;global&lt;/strong&gt;, dependiendo de cómo lo vayas a utilizar.&lt;/p&gt;

&lt;p&gt;Si vas a utilizar el paquete en un proyecto debes instalarlo de forma &lt;strong&gt;local&lt;/strong&gt;, en la carpeta donde se encuentren los archivos del proyecto.&lt;/p&gt;

&lt;p&gt;Si el paquete es una aplicación para la línea de comandos es mejor instalarlo de forma &lt;strong&gt;global&lt;/strong&gt;, para que esté disponible desde cualquier ubicación en nuestro sistema.&lt;/p&gt;

&lt;h3 id=&quot;instalación-local&quot;&gt;Instalación local&lt;/h3&gt;

&lt;p&gt;Para instalar un paquete de forma &lt;strong&gt;local&lt;/strong&gt; utiliza el comando &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt; seguido del nombre del paquete. &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt; crea una carpeta llamada &lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; en la carpeta donde estés ubicado(a), y ahí instala el paquete.&lt;/p&gt;

&lt;p&gt;Por ejemplo, crea una carpeta llamada &lt;code class=&quot;highlighter-rouge&quot;&gt;npm-test&lt;/code&gt; e instala el paquete &lt;a href=&quot;https://github.com/marak/Faker.js/&quot;&gt;faker.js&lt;/a&gt;, que es una librería para generar datos ficticios ejecutando los siguientes comandos:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;mkdir npm-test
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;npm-test
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm install faker
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Revisa que exista la carpeta &lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; y que dentro de esa carpeta exista una carpeta llamada &lt;code class=&quot;highlighter-rouge&quot;&gt;faker&lt;/code&gt;. En un momento vamos a ver cómo utilizar este paquete desde tu código.&lt;/p&gt;

&lt;h3 id=&quot;instalación-global&quot;&gt;Instalación global&lt;/h3&gt;

&lt;p&gt;Instalar un paquete de forma &lt;strong&gt;global&lt;/strong&gt; es similar a instalar uno &lt;strong&gt;local&lt;/strong&gt;, la única diferencia es que se debe agregar la opción &lt;code class=&quot;highlighter-rouge&quot;&gt;-g&lt;/code&gt; al comando &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Por ejemplo, para instalar &lt;a href=&quot;https://github.com/workshopper/learnyounode&quot;&gt;learnyounode&lt;/a&gt;, un paquete que te enseña Node.js, ejecuta el siguiente comando desde cualquier ubicación:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm install -g learnyounode
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ahora verifica que haya quedado bien instalado ejecutando:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;learnyounode
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ese comando lo puedes ejecutar desde cualquier ubicación en tu sistema.&lt;/p&gt;

&lt;h3 id=&quot;usando-un-paquete-en-tu-código&quot;&gt;Usando un paquete en tu código&lt;/h3&gt;

&lt;p&gt;Para usar un paquete debes requerirlo con la función &lt;code class=&quot;highlighter-rouge&quot;&gt;require&lt;/code&gt;. Por ejemplo, en la misma carpeta donde instalaste &lt;a href=&quot;https://github.com/marak/Faker.js/&quot;&gt;faker.js&lt;/a&gt;, crea un archivo &lt;code class=&quot;highlighter-rouge&quot;&gt;index.js&lt;/code&gt; con el siguiente código:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;faker&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'faker'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;faker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;findName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ahora ejecútalo con el siguiente comando:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;node index.js
&lt;span class=&quot;s1&quot;&gt;'Dane Effertz'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;El resultado seguramente será diferente en tu caso.&lt;/p&gt;

&lt;p&gt;Nuestra recomendación es que siempre consultes la documentación del paquete para ver cómo requerirlo y usarlo.&lt;/p&gt;

&lt;h3 id=&quot;packagejson&quot;&gt;package.json&lt;/h3&gt;

&lt;p&gt;La mejor forma de de manejar paquetes en un proyecto es crear un archivo llamado &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; es un archivo con formato JSON dónde se definen los paquetes de los que depende nuestro proyecto (con sus respectivas versiones). De esa forma centralizas todas las dependencias y le facilitas la vida a otros colaboradores de tu proyecto.&lt;/p&gt;

&lt;p&gt;El archivo &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; debe estar en la raíz de tu proyecto y debe tener, como mínimo, un nombre y una versión como se muestra a continuación:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mi-super-paquete&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;El &lt;strong&gt;nombre&lt;/strong&gt; debe ser una palabra en minúscula sin espacios, puedes utilizar guión (&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;) y raya al piso (&lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;La &lt;strong&gt;versión&lt;/strong&gt; debe ser de la forma &lt;strong&gt;x.x.x&lt;/strong&gt; y debería seguir el &lt;strong&gt;&lt;a href=&quot;https://docs.npmjs.com/getting-started/semantic-versioning&quot;&gt;versionamiento semántico&lt;/a&gt;&lt;/strong&gt;, que define cuando incrementar cada uno de los números:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;El último número se incrementa cuando se corrigen bugs y se realizan cambios menores que no afectan funcionalidades existentes.&lt;/li&gt;
  &lt;li&gt;El segundo número se incrementa cuando se introducen funcionalidades y cambios que no afectan las funcionalidades existentes.&lt;/li&gt;
  &lt;li&gt;El primer número se incrementa cuando se introducen cambios que afectan funcionalidades existentes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sin embargo, la forma más fácil de generar el archivo &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; es con el comando &lt;code class=&quot;highlighter-rouge&quot;&gt;npm init&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;mi-proyecto
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm init
This utility will walk you through creating a package.json file.
It only covers the most common items, and tries to guess sensible defaults.

See &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;npm &lt;span class=&quot;nb&quot;&gt;help &lt;/span&gt;json&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;definitive documentation on these fields
and exactly what they &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;.

Use &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;npm install &amp;lt;pkg&amp;gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; afterwards to install a package and
save it as a dependency &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the package.json file.

Press ^C at any &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;to quit.
package name: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;mi-proyecto&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Oprime &lt;code class=&quot;highlighter-rouge&quot;&gt;Enter&lt;/code&gt; para aceptar los valores sugeridos entre paréntesis o ingresa tus propios valores. Al final se va a generar el archivo &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; con la información que ingresaste.&lt;/p&gt;

&lt;h3 id=&quot;agregando-dependencias&quot;&gt;Agregando dependencias&lt;/h3&gt;

&lt;p&gt;Existen dos tipos de dependencias que puedes agregar al &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;dependencies&lt;/strong&gt;: paquetes que son requeridos durante la ejecución del programa.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;devDependencies&lt;/strong&gt;: paquetes que se utilizan para desarrollo y pruebas.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Una forma de agregar dependencias a tu proyecto es agregándolas al archivo &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; directamente. Por ejemplo, si queremos agregar una dependencia de ejecución llamada &lt;code class=&quot;highlighter-rouge&quot;&gt;react&lt;/code&gt; y otra de desarrollo llamada &lt;code class=&quot;highlighter-rouge&quot;&gt;faker&lt;/code&gt; podemos hacerlo de la siguiente forma:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mi-super-paquete&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;react&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;faker&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;3.1.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Cada vez que modifiques manualmente el archivo &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; asegúrate de ejecutar el siguiente comando para que se instalen los paquetes que agregaste o cambiaste:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Sin embargo, la forma más fácil de agregar una dependencia es utilizando &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt; con la opción &lt;code class=&quot;highlighter-rouge&quot;&gt;--save&lt;/code&gt; o &lt;code class=&quot;highlighter-rouge&quot;&gt;--save-dev&lt;/code&gt;. Por ejemplo:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm install react --save
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm install faker --save-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Cuando descargues un proyecto que contenga un archivo &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; no olvides ejecutar &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt; para descargar todas las dependencias.&lt;/p&gt;

&lt;p&gt;La documentación completa de &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt; se encuentra en el siguiente enlace &lt;a href=&quot;https://docs.npmjs.com/&quot;&gt;https://docs.npmjs.com/&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;yarn&quot;&gt;Yarn&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://yarnpkg.com/en/&quot;&gt;Yarn&lt;/a&gt; fue el producto de la colaboración entre Facebook y Google para crear un mejor manejador de paquetes que &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;El primer paso para utilizar &lt;a href=&quot;https://yarnpkg.com/en/&quot;&gt;Yarn&lt;/a&gt; es instalarlo en tu máquina. Ingresa a &lt;a href=&quot;https://yarnpkg.com/en/docs/install&quot;&gt;este enlace&lt;/a&gt; donde encontrarás las instrucciones para tu sistema operativo.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://yarnpkg.com/en/&quot;&gt;Yarn&lt;/a&gt; es compatible con &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;, así que puedes utilizar el mismo archivo &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;. Los comandos también son muy similares, la diferencia más importante es que en vez de &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt; se utiliza &lt;code class=&quot;highlighter-rouge&quot;&gt;yarn add&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para inicializar un nuevo proyecto utiliza:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;yarn init
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Para agregar una dependencia de ejecución de forma &lt;strong&gt;local&lt;/strong&gt; utiliza:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;yarn add &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;paquete]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Para agregar una dependencia de desarrollo o pruebas de forma &lt;strong&gt;local&lt;/strong&gt; utiliza:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;yarn add &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;paquete] --dev
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Para instalar las dependencias de un proyecto (cuando has hecho cambios al &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; o has descargado un nuevo proyecto):&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;yarn install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Para instalar un paquete de forma &lt;strong&gt;global&lt;/strong&gt; utiliza:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;yarn global add &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;paquete]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;La documentación completa de &lt;a href=&quot;https://yarnpkg.com/en/&quot;&gt;Yarn&lt;/a&gt; se encuentra en el siguiente enlace: &lt;a href=&quot;https://yarnpkg.com/en/docs&quot;&gt;https://yarnpkg.com/en/docs&lt;/a&gt;.&lt;/p&gt;</content><author><name>Germán Escobar</name></author><summary type="html">Las librerías son una parte fundamental de cualquier lenguaje de programación y nos permiten reutilizar código que otros desarrolladores han escrito y publicado. En este post vamos a hablar de npm y Yarn, los dos manejadores de paquetes más populares de Node.js.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://s3.amazonaws.com/makeitreal/blog/images/boxes.jpeg" /></entry><entry><title type="html">Introducción a Node.js</title><link href="http://blog.makeitreal.camp/introduccion-a-nodejs/" rel="alternate" type="text/html" title="Introducción a Node.js" /><published>2017-12-25T02:00:00-05:00</published><updated>2017-12-25T02:00:00-05:00</updated><id>http://blog.makeitreal.camp/introduccion-a-nodejs</id><content type="html" xml:base="http://blog.makeitreal.camp/introduccion-a-nodejs/">&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; es una plataforma que nos permite ejecutar código JavaScript fuera del navegador. En este post explicaremos cómo empezar con &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt;, qué tipo de aplicaciones puedes construir y una introducción a su poderoso manejador de paquetes.&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;Muchas personas creen que &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; se utiliza sólo para crear aplicaciones Web, pero esto no es cierto. Con &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; puedes hacer mucho más que eso. &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; es equivalente a otros lenguajes de programación como Ruby, Python y Java, por nombrar algunos.&lt;/p&gt;

&lt;p&gt;Todo lo que sabes actualmente de JavaScript te va a servir para crear aplicaciones con &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; (variables, condicionales, ciclos, arreglos, etc.). Sin embargo, con Node.js puedes hacer cosas que no se pueden hacer dentro del navegador como:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Manipular archivos del sistema (crear, editar, eliminar, etc.).&lt;/li&gt;
  &lt;li&gt;Crear aplicaciones para la línea de comandos.&lt;/li&gt;
  &lt;li&gt;Crear aplicaciones móviles.&lt;/li&gt;
  &lt;li&gt;Crear aplicaciones de escritorio.&lt;/li&gt;
  &lt;li&gt;Y, claro, crear aplicaciones Web.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;primeros-pasos&quot;&gt;Primeros pasos&lt;/h2&gt;

&lt;p&gt;Para empezar con &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; debes primero descargarlo e instalarlo en tu maquina. Abre &lt;a href=&quot;https://github.com/makeitrealcamp/node-installation&quot; target=&quot;_blank&quot;&gt;este enlace&lt;/a&gt; y sigue las instrucciones para tu sistema operativo.&lt;/p&gt;

&lt;p&gt;Asegúrate que haya sido correctamente instalado abriendo una línea de comandos y ejecutando &lt;code class=&quot;highlighter-rouge&quot;&gt;node -v&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;node -v
v10.7.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Aunque la versión puede ser diferente, asegúrate que sea una reciente, preferiblemente mayor a 9.0.0.&lt;/p&gt;

&lt;p&gt;Existen dos formas de ejecutar código en &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt;. La primera es utilizando el interpretador. Abre una línea de comandos y ejecuta lo siguiente:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;node
&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ahí puedes empezar a escribir expresiones de JavaScript, por ejemplo &lt;code class=&quot;highlighter-rouge&quot;&gt;1 + 1&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;1 + 1
2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Para salir de la consola de &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; oprime &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + D&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;La segunda forma de ejecutar código en &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; es creando un archivo y ejecutándolo. Por ejemplo, crea un archivo llamado &lt;code class=&quot;highlighter-rouge&quot;&gt;app.js&lt;/code&gt; y escribe lo siguiente:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Mi primer programa en Node.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Guárdalo y ejecutalo con el siguiente comando:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;node app.js
Mi primer programa en Node.js
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Felicitaciones, has escrito tu primer programa en &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt;!&lt;/p&gt;

&lt;h2 id=&quot;algo-más-interesante&quot;&gt;Algo más interesante&lt;/h2&gt;

&lt;p&gt;Veamos el siguiente ejemplo que va a crear un archivo en nuestra máquina. Empieza transcribiendo el siguiente programa en un archivo llamado &lt;code class=&quot;highlighter-rouge&quot;&gt;generarArchivo.js&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;writeFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hola.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hola Mundo!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;El archivo fue creado correctamente&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Este código lo copié de Internet, que es la forma más fácil de hacer cualquier cosa en programación ;) Pero si quieres saber qué está haciendo este código acá va.&lt;/p&gt;

&lt;p&gt;En la primera línea estamos requiriendo un módulo. Un módulo es como una librería, que nos va a permitir hacer algo específico.&lt;/p&gt;

&lt;p&gt;El módulo &lt;code class=&quot;highlighter-rouge&quot;&gt;fs&lt;/code&gt; (file system) es el que nos va a permitir manipular archivos. Existen módulos que están incluidos con &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; (como &lt;code class=&quot;highlighter-rouge&quot;&gt;fs&lt;/code&gt;) y otros que puedes utilizar por medio de librerías externas.&lt;/p&gt;

&lt;p&gt;Para ejecutar este programa ingresa el comando &lt;code class=&quot;highlighter-rouge&quot;&gt;node generarArchivo.js&lt;/code&gt; en la consola, deberías ver el mensaje “El archivo fue creado correctamente”:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;node generarArchivo.js
El archivo fue creado correctamente
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Asegúrate de que se haya creado un archivo llamado &lt;code class=&quot;highlighter-rouge&quot;&gt;nuevo.txt&lt;/code&gt; en la misma carpeta donde está el programa y que tenga el siguiente contenido:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;Primera línea
Segunda línea
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;un-servidor-web&quot;&gt;Un servidor Web&lt;/h2&gt;

&lt;p&gt;Uno de los primeros programas de ejemplo que se muestran cuando se habla de &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; es un servidor Web. Quizá esa sea la razón por la que muchos que creen que &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; se usa exclusivamente para crear aplicaciones Web.&lt;/p&gt;

&lt;p&gt;Para crear un servidor Web necesitamos el módulo &lt;code class=&quot;highlighter-rouge&quot;&gt;http&lt;/code&gt;. Crea un archivo llamado &lt;code class=&quot;highlighter-rouge&quot;&gt;server.js&lt;/code&gt; y transcribe el siguiente código:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'http'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;h1&amp;gt;Hello World&amp;lt;h1&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Server&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;running&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//localhost:3000/`);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Para ejecutar esta aplicación utiliza el siguiente comando:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;node server.js
Server running at http://localhost:3000/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ahora ingresa desde un navegador a http://localhost:3000/. Debes ver el texto “Hola Mundo”.&lt;/p&gt;

&lt;p&gt;Para detener el servidor oprime &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + C&lt;/code&gt; en la consola.&lt;/p&gt;

&lt;h2 id=&quot;librerías-con-npm&quot;&gt;Librerías con npm&lt;/h2&gt;

&lt;p&gt;Hasta ahora hemos usado módulos que vienen incluidos con &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; como &lt;a href=&quot;[&quot;&gt;fs&lt;/a&gt; y &lt;a href=&quot;https://nodejs.org/api/http.html&quot;&gt;http&lt;/a&gt;. Sin embargo, el gran poder de &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; viene de las &lt;strong&gt;librerías externas&lt;/strong&gt;: código que escriben y publican otros desarrolladores y que podemos utilizar en nuestros proyectos.&lt;/p&gt;

&lt;p&gt;Las librerías en &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; se conocen con el nombre de &lt;strong&gt;paquetes&lt;/strong&gt;. Existen &lt;strong&gt;paquetes&lt;/strong&gt; casi para todo lo que te puedas imaginar. Algunos ejemplos incluyen:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;[https://www.npmjs.com/package/currency-converter&quot;&gt;currency-converter&lt;/a&gt; permite realizar conversiones entre monedas.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;[minifier]https://www.npmjs.com/package/minifier&quot;&gt;minifier&lt;/a&gt; permite minificar archivos de JS y CSS.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;[lorem-ipsum]https://www.npmjs.com/package/lorem-ipsum&quot;&gt;lorem-ipsum&lt;/a&gt; permite generar textos de ejemplo.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;[express]https://www.npmjs.com/package/express&quot;&gt;express&lt;/a&gt; permite crear aplicaciones Web.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/fb&quot;&gt;fb&lt;/a&gt; permite interactuar con el API de Facebook&lt;/li&gt;
  &lt;li&gt;Entre cientos de miles más!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; viene con un manejador de paquetes llamado &lt;a href=&quot;https://www.npmjs.org/&quot; target=&quot;_blank&quot;&gt;npm&lt;/a&gt;, que es realmente una aplicación de consola que te va a permitir instalar y manejar los paquetes que se encuentran en el repositorio central de &lt;a href=&quot;https://www.npmjs.org/&quot; target=&quot;_blank&quot;&gt;npm&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Por ejemplo, para instalar &lt;a href=&quot;https://github.com/workshopper/learnyounode&quot; target=&quot;_blank&quot;&gt;learnyounode&lt;/a&gt;, un paquete que te enseña &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt;, ejecuta el siguiente comando:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm install -g learnyounode
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ahora verifica que haya quedado bien instalado ejecutando el comando &lt;code class=&quot;highlighter-rouge&quot;&gt;learnyounode&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;learnyounode
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Y sigue aprendiendo &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;En la siguiente post vamos a hablar en más detalle de &lt;a href=&quot;https://www.npmjs.org/&quot; target=&quot;_blank&quot;&gt;npm&lt;/a&gt; y otro manejador de paquetes llamado &lt;a href=&quot;https://yarnpkg.com/en/&quot; target=&quot;_blank&quot;&gt;Yarn&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; &lt;strong&gt;no&lt;/strong&gt; es un nuevo lenguaje de programación, es una plataforma que te va a permitir ejecutar código JavaScript por fuera del navegador.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Con &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; puedes crear cualquier programa o aplicación que podrías crear con otro lenguaje de uso general como Java, Ruby, C++ o Python.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;El gran poder de &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; se encuentra en las librerías (llamadas &lt;strong&gt;paquetes&lt;/strong&gt;) y en la comunidad de programadores que las escriben y las publican sin costo alguno!&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Germán Escobar</name></author><summary type="html">Node.js es una plataforma que nos permite ejecutar código JavaScript fuera del navegador. En este post explicaremos cómo empezar con Node.js, qué tipo de aplicaciones puedes construir y una introducción a su poderoso manejador de paquetes.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/nodejs.jpg" /></entry><entry><title type="html">Lenguajes compilados e interpretados</title><link href="http://blog.makeitreal.camp/lenguajes-compilados-e-interpretados/" rel="alternate" type="text/html" title="Lenguajes compilados e interpretados" /><published>2017-11-06T02:00:00-05:00</published><updated>2017-11-06T02:00:00-05:00</updated><id>http://blog.makeitreal.camp/lenguajes-compilados-e-interpretados</id><content type="html" xml:base="http://blog.makeitreal.camp/lenguajes-compilados-e-interpretados/">&lt;p&gt;C, C++ y Go son lenguajes de programación &lt;strong&gt;compilados&lt;/strong&gt;. JavaScript, Python y Ruby son lenguajes &lt;strong&gt;interpretados&lt;/strong&gt;. ¿Cuál es la diferencia y las ventajas/desventajas de un lenguaje compilado versus uno interpretado? En este post lo vamos a explicar.&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;Tanto &lt;strong&gt;compiladores&lt;/strong&gt; como &lt;strong&gt;interpretadores&lt;/strong&gt; son programas que convierten el código que escribes a &lt;strong&gt;lenguaje de máquina&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lenguaje de máquina&lt;/strong&gt; son las instrucciones que entiende el computador (el procesador para ser más exactos) en código binario (unos y ceros).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/code-to-machine.png&quot; alt=&quot;Lenguaje de alto nivel a lenguaje de máquina&quot; class=&quot;photo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;La principal diferencia entre un lenguaje compilado y uno interpretado es que el &lt;strong&gt;lenguaje compilado&lt;/strong&gt; requiere un paso adicional antes de ser ejecutado, la compilación, que convierte el código que escribes a &lt;strong&gt;lenguaje de máquina&lt;/strong&gt;. Un &lt;strong&gt;lenguaje interpretado&lt;/strong&gt;, por otro lado, es convertido a &lt;strong&gt;lenguaje de máquina&lt;/strong&gt; a medida que es ejecutado.&lt;/p&gt;

&lt;p&gt;Ejemplos de &lt;strong&gt;lenguajes compilados&lt;/strong&gt; incluyen C, C++, Java, Go y Rust, entre muchos otros. Ejemplos de &lt;strong&gt;lenguajes interpretados&lt;/strong&gt; incluyen Ruby, Python y JavaScript, entre muchos otros. A todos estos lenguajes se les conoce como &lt;strong&gt;lenguajes de alto nivel&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Veamos un ejemplo de cada uno.&lt;/p&gt;

&lt;h2 id=&quot;un-ejemplo-de-lenguaje-interpretado&quot;&gt;Un ejemplo de lenguaje interpretado&lt;/h2&gt;

&lt;p&gt;Ruby es un lenguaje interpretado, así que podemos crear un archivo llamado &lt;code class=&quot;highlighter-rouge&quot;&gt;hola.rb&lt;/code&gt; con el siguiente código, o cualquier código válido en Ruby (a esto se le conoce como el &lt;strong&gt;código fuente&lt;/strong&gt;):&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hola Mundo&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Y ejecutarlo directamente ingresando el siguiente comando en la consola:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ruby hello.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Te debería aparecer debajo la cadena “Hola Mundo“.  Si quieres puedes cambiar el código fuente y volverlo a ejecutar.&lt;/p&gt;

&lt;h2 id=&quot;un-ejemplo-de-lenguaje-compilado&quot;&gt;Un ejemplo de lenguaje compilado&lt;/h2&gt;

&lt;p&gt;Un lenguaje compilado tiene un paso adicional. Si tienes un compilador de C como &lt;a href=&quot;https://gcc.gnu.org/&quot; target=&quot;_blank&quot;&gt;gcc&lt;/a&gt; puedes crear un archivo llamado &lt;code class=&quot;highlighter-rouge&quot;&gt;hello.c&lt;/code&gt;  con el siguiente contenido, o cualquier código válido en C:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hola Mundo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Antes de ejecutarlo debes compilarlo con el siguiente comando:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gcc hello.c -o hello
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Eso crea un archivo llamado &lt;code class=&quot;highlighter-rouge&quot;&gt;hello&lt;/code&gt; (sin extensión) con el código de máquina (llamado el ejecutable) que puedes correr en la consola con el siguiente comando:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;./hello
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Te debería aparecer la cadena de texto “Hola Mundo” debajo. Si necesitas cambiar el código fuente debes volverlo a compilar y ejecutarlo nuevamente.&lt;/p&gt;

&lt;h2 id=&quot;ventajas-y-desventajas&quot;&gt;Ventajas y desventajas&lt;/h2&gt;

&lt;p&gt;En general, &lt;strong&gt;el ciclo de desarrollo (el tiempo entre el momento en que escribes el código y lo pruebas) es más rápido en un lenguaje interpretado&lt;/strong&gt;. Eso se debe a que en lenguajes compilados es necesario realizar el proceso de compilación cada vez que cambias el código fuente, aunque con herramientas adicionales se puede automatizar.&lt;/p&gt;

&lt;p&gt;Otra desventaja de un lenguaje compilado es que cuando compilas un programa debes crear ejecutables para cada uno de los sistemas operativos en los que lo vayas a utilizar. Un ejecutable creado para Linux no va a servir en Windows por ejemplo.&lt;/p&gt;

&lt;p&gt;Sin embargo, &lt;strong&gt;un lenguaje compilado es mucho más rápido que uno interpretado&lt;/strong&gt;. Esto se debe a que cuando es ejecutado ya se encuentra en código de máquina y eso también le permite hacer algunas optimizaciones que no son posibles con un lenguaje interpretado.&lt;/p&gt;

&lt;p&gt;Además de la velocidad, otra desventaja de un lenguaje interpretado es que, para ser ejecutado, debes tener instalado el interpretador. Esto no es necesario en un lenguaje compilado que es convertido a lenguaje de máquina&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;En general, &lt;strong&gt;un lenguaje compilado está optimizado para el momento de la ejecución&lt;/strong&gt;, aunque esto signifique una carga adicional para el programador. Por otro lado, &lt;strong&gt;un lenguaje interpretado está optimizado para hacerle la vida más fácil al programador&lt;/strong&gt;, aunque eso signifique una carga adicional para la máquina.&lt;/p&gt;

&lt;h2 id=&quot;el-caso-de-java&quot;&gt;El caso de Java&lt;/h2&gt;

&lt;p&gt;Java es un lenguaje particular porque es compilado, pero es compilado a un lenguaje intermedio llamado &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_bytecode&quot; target=&quot;_blank&quot;&gt;bytecode&lt;/a&gt;, que después es interpretado. Los creadores de Java querían crear un lenguaje compilado, pero que se pudiera ejecutar en cualquier sistema operativo y procesador sin necesidad de crear varios ejecutables.&lt;/p&gt;

&lt;p&gt;Es por eso que si quieres ejecutar código Java debes instalar el &lt;a href=&quot;https://java.com/es/download/&quot; target=&quot;_blank&quot;&gt;JRE (Java Runtime Environment)&lt;/a&gt;, que es el programa que se encarga de interpretar el &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_bytecode&quot; target=&quot;_blank&quot;&gt;bytecode&lt;/a&gt; al que son compilados los programas de Java.&lt;/p&gt;

&lt;p&gt;Si deseas compilar código Java no es suficiente instalar el JRE, necesitas el &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/index.html&quot; target=&quot;_blank&quot;&gt;JDK (Java Development Kit)&lt;/a&gt; que incluye el compilador, entre otras herramientas de desarrollo.&lt;/p&gt;

&lt;p&gt;Otros lenguajes que están siguiendo este mismo modelo incluyen Elixir y C#, entre otros.&lt;/p&gt;

&lt;h2 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h2&gt;

&lt;p&gt;Se puede decir que los lenguajes de alto nivel se pueden dividir en tres ramas: puramente compilados (C++, Go, etc.), parcialmente compilados  (Java, Elixir, etc.)  e interpretados (Ruby, JavaScript, etc.).&lt;/p&gt;

&lt;p&gt;Sin embargo, la brecha entre estas ramas cada vez es menor. Hoy existen lenguajes compilados a lenguaje de máquina como Go y Rust que se inclinan cada vez más en la productividad y felicidad del programador mientras que los lenguajes interpretados son cada vez más rápidos en ejecución.&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Como vamos a ver adelante existen lenguajes compilados que no son convertidos directamente a lenguaje de máquina sino a un lenguaje intermedio.&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Germán Escobar</name></author><summary type="html">C, C++ y Go son lenguajes de programación compilados. JavaScript, Python y Ruby son lenguajes interpretados. ¿Cuál es la diferencia y las ventajas/desventajas de un lenguaje compilado versus uno interpretado? En este post lo vamos a explicar.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/lights-exposure.jpeg" /></entry><entry><title type="html">La era de la información digital</title><link href="http://blog.makeitreal.camp/la-era-de-la-informacion-digital/" rel="alternate" type="text/html" title="La era de la información digital" /><published>2017-10-28T03:00:00-04:00</published><updated>2017-10-28T03:00:00-04:00</updated><id>http://blog.makeitreal.camp/la-era-de-la-informacion-digital</id><content type="html" xml:base="http://blog.makeitreal.camp/la-era-de-la-informacion-digital/">&lt;p&gt;¿Qué significa digital? ¿qué podemos considerar información? ¿cómo podemos medirla? ¿qué es un bit? En este post explicaremos por qué nos encontramos en la era de la información digital.&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;Alrededor del año 3000 AEC, en Mesopotamia, los sumerios implementaron la primera forma de escritura, llamada escritura cuneiforme. Antes de la escritura, la única forma de almacenar y replicar información era utilizando nuestros cerebros, que &lt;strong&gt;no&lt;/strong&gt; son particularmente buenos para esa tarea.&lt;/p&gt;

&lt;p&gt;La escritura nos permitió almacenar texto, pero más adelante también fue posible almacenar música, imágenes y video en diferentes medios análogos como vinilos, fotografías y cintas magnéticas.&lt;/p&gt;

&lt;p&gt;Hoy podemos almacenar toda esa información en nuestros computadores de forma digital. Pero ¿cómo es eso posible?&lt;/p&gt;

&lt;p&gt;La respuesta es que en 1948 un personaje llamado &lt;a href=&quot;https://es.wikipedia.org/wiki/Claude_Elwood_Shannon&quot; target=&quot;_blank&quot;&gt;Claude Shannon&lt;/a&gt;, en su publicación &lt;a href=&quot;https://es.wikipedia.org/wiki/Una_teor%C3%ADa_matem%C3%A1tica_de_la_comunicaci%C3%B3n&quot; target=&quot;_blank&quot;&gt;Una Teoría Matemática de la Comunicación&lt;/a&gt; demostró cómo toda la información puede ser representada en números, sin importar de qué tipo sea (texto, audio, video, etc.). Su principal objetivo era demostrar que cualquier mensaje se puede transmitir utilizando números, pero su teoría también fue aplicada al almacenamiento de información.&lt;/p&gt;

&lt;p&gt;Por ejemplo, una forma en que podemos representar texto con números (la palabra correcta es &lt;strong&gt;codificar&lt;/strong&gt;) es asignándole a cada letra del alfabeto un número único: 1 para representar la A, 2 para la B, 26 para la Z, 0 para el espacio, etc.&lt;/p&gt;

&lt;p&gt;También es posible representar audio, imágenes y video con técnicas similares, aunque un poco más sofisticadas: audio no son más que cambios de frecuencias en el tiempo, que también pueden ser representados con números. Una imagen puede ser separada en pixeles (cuadrados) y utilizar números para expresar el color de cada pixel.&lt;/p&gt;

&lt;p&gt;Al proceso de convertir la información en números se le conoce como digitalización, y por eso se habla de información digital (está almacenada en dígitos).&lt;/p&gt;

&lt;p&gt;La información digital tiene la ventaja de que es fácilmente replicable (y las réplicas son exactas), pero la desventaja es que se puede perder información en el proceso de digitalización, como cuando la música en vinilo pierde fidelidad al ser digitalizada o cuando una fotografía se ve pixelada por baja resolución.&lt;/p&gt;

&lt;h2 id=&quot;dígitos-binarios&quot;&gt;Dígitos binarios&lt;/h2&gt;

&lt;p&gt;El sistema numérico al que estamos acostumbrados es el decimal, que utiliza diez dígitos en cada posición: 0 a 9.&lt;/p&gt;

&lt;p&gt;Pero existen otros sistemas numéricos como el binario, compuesto de dos dígitos en cada posición (0 y 1), o el octal, compuesto por 8 dígitos en cada posición (0 a 7), o el hexadecimal, compuesto de 16 dígitos en cada posición (se utilizan las letras A, B, C, D, E y F para representar los números del 10 al 15).&lt;/p&gt;

&lt;p&gt;Cualquier número se puede convertir de un sistema a otro. La diferencia es que un sistema puede necesitar más o menos posiciones que otro para representar el mismo número. Por ejemplo, para representar el número doce necesitamos dos posiciones en el sistema decimal (12). En el sistema hexadecimal sólo necesitamos una posición (C) y en el sistema binario necesitamos cuatro posiciones (1100).&lt;/p&gt;

&lt;p&gt;Aunque es posible crear un computador utilizando el sistema decimal (de hecho los primeros computadores utilizaban este sistema), es mucho mejor utilizar el sistema binario. La razón es que los computadores utilizan diferentes voltajes eléctricos para representar cada dígito. Entre más voltajes necesitemos, mayor el consumo de energía y mayor la probabilidad de error.&lt;/p&gt;

&lt;p&gt;Es por eso que hoy en día almacenamos y transmitimos toda la información utilizando únicamente dos dígitos (0 y 1), más conocidos como &lt;strong&gt;bits&lt;/strong&gt;, que es una contracción de las palabras &lt;strong&gt;binary digits&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;medir-la-información&quot;&gt;Medir la información&lt;/h2&gt;

&lt;p&gt;Una consecuencia interesante de representar la información en dígitos es que es posible medirla, sin importar si es texto, imágenes, audio o video.  Por ejemplo,  podemos decir que nuestro disco duro tiene 500 gigabytes ocupados, independiente si es texto, música, o cualquier otro tipo de información.&lt;/p&gt;

&lt;p&gt;Por cierto, 8 bits forman un byte, 1000 bytes forman un kilobyte, 1000 kilobytes forman un megabyte, 1000 megabytes forman un gigabyte, y así sucesivamente. Siguen los terabytes, petabytes, exabytes, etc.  Un petabyte, por ejemplo, son 8000000000000000 bits (esos son 15 ceros).&lt;/p&gt;

&lt;p&gt;También podemos medir la cantidad de información que estamos produciendo por alguna medida de tiempo, por ejemplo por día, hora, segundo, etc. Según &lt;a href=&quot;http://www.new.vcloudnews.com/wp-content/uploads/2015/04/big-data-infographic1.png&quot; target=&quot;_blank&quot;&gt;esta infografía&lt;/a&gt;, en 1992 estábamos generando 100GB de información digital al día, se calcula que para el 2018 estaremos generando 50 terabytes por segundo!&lt;/p&gt;

&lt;p&gt;Nuestros descendientes no van a tener el problema que tenemos nosotros encontrando información de nuestros antepasados, al contrario, su problema es que van a tener demasiada información por analizar. Y esa es la razón por la que a esta era la llamamos &lt;strong&gt;la era de la información digital&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Otros posts relacionados:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/que-es-codigo&quot;&gt;¿Qué es código?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/aprende-a-leer-en-codigo-binario&quot;&gt;Aprende a leer en código binario&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Germán Escobar</name></author><summary type="html">¿Qué significa digital? ¿qué podemos considerar información? ¿cómo podemos medirla? ¿qué es un bit? En este post explicaremos por qué nos encontramos en la era de la información digital.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/digital-analog.jpeg" /></entry><entry><title type="html">La fortuna de ser programador</title><link href="http://blog.makeitreal.camp/la-fortuna-de-ser-programador/" rel="alternate" type="text/html" title="La fortuna de ser programador" /><published>2017-10-02T03:00:00-04:00</published><updated>2017-10-02T03:00:00-04:00</updated><id>http://blog.makeitreal.camp/la-fortuna-de-ser-programador</id><content type="html" xml:base="http://blog.makeitreal.camp/la-fortuna-de-ser-programador/">&lt;p&gt;La programación es uno de los trabajos con mejores salarios de la actualidad y una de las carreras más importantes del futuro. Y sin embargo, esto &lt;strong&gt;no&lt;/strong&gt; es lo que me hace sentir más afortunado de ser un programador.&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;La programación es mucho más que escribir código. La programación es un proceso creativo, mentalmente desafiante, que genera gran satisfacción personal.&lt;/p&gt;

&lt;p&gt;Empezar con una pantalla en blanco y en algunas horas poder construir algo que antes no existía, algo que puede funcionar sin nuestra intervención, es fascinante, y la sensación cuando otros empiezan a utilizar eso que hemos construído es simplemente indescriptible.&lt;/p&gt;

&lt;p&gt;Los programadores tenemos la fortuna de aprender nuevas cosas todos los días. Y no sólo de programación, sino de otras industrias. Si estamos haciendo una aplicación financiera, por ejemplo, aprendemos también de finanzas. Si es una aplicación para músicos, aprendemos también de música (a menos de que sea una aplicación que les ayuda a los músicos a llevar sus finanzas 😂).&lt;/p&gt;

&lt;p&gt;Gracias a la programación, y la tecnología en general, hoy varios países ya podrían pagar un salario básico a cada uno de sus habitantes para que ninguna persona tenga que depender de un trabajo monótono y repetitivo para subsistir. Necesitamos más programadores que nos ayuden a acelerar ese proceso.&lt;/p&gt;

&lt;p&gt;Por todo esto me siento muy afortunado de ser un programador.&lt;/p&gt;

&lt;p&gt;Pero lo que me hace sentir más afotrunado es poder hacer lo que me apasiona todos los días, a cualquier hora y desde cualquier lugar. Y eso es algo que no cambiaría por nada del mundo.&lt;/p&gt;</content><author><name>Germán Escobar</name></author><summary type="html">La programación es uno de los trabajos con mejores salarios de la actualidad y una de las carreras más importantes del futuro. Y sin embargo, esto no es lo que me hace sentir más afortunado de ser un programador.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/sunset-tree.jpg" /></entry><entry><title type="html">¿Cómo aprovechar al máximo los mentores de Make it Real?</title><link href="http://blog.makeitreal.camp/como-aprovechar-al-maximo-los-mentores/" rel="alternate" type="text/html" title="¿Cómo aprovechar al máximo los mentores de Make it Real?" /><published>2017-09-18T03:00:00-04:00</published><updated>2017-09-18T03:00:00-04:00</updated><id>http://blog.makeitreal.camp/como-aprovechar-al-maximo-los-mentores</id><content type="html" xml:base="http://blog.makeitreal.camp/como-aprovechar-al-maximo-los-mentores/">&lt;p&gt;Quizá la principal ventaja de nuestros programas es la guía y retroalimentación de los mentores. En este post aprenderás cómo aprovecharlos al máximo para acelerar tu aprendizaje.&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;Toda la información para aprender a programar está en Internet. El problema no es falta de información, al contrario, uno de los problemas que tienen hoy las personas que quieren aprender a programar es el exceso de información.&lt;/p&gt;

&lt;p&gt;En &lt;a href=&quot;https://makeitreal.camp/&quot;&gt;Make it Real&lt;/a&gt; hemos diseñado programas que aceleran tu aprendizaje a través de retos, proyectos, contenido propio y contenido cuidadosamente seleccionado de Internet. Sin embargo, si tu objetivo es ver muchos videos, nuestros programas no son para ti. Uno no aprende a programar viendo videos, uno aprende escribiendo código.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;En nuestros programas vas a tener que buscar en Internet y escribir código desde el primer día.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;No te preocupes si te atascas en un reto o proyecto. Es normal y para eso están los mentores. Si llevas más de una hora atascado(a) pide ayuda. No te vamos a dar la respuesta pero te vamos a guiar para que lo puedas solucionar. Lo más útil es que nos muestres el código que llevas y lo que has buscado en Internet hasta ese momento. De esa forma sabremos cómo guiarte mejor.&lt;/p&gt;

&lt;p&gt;Esto también requiere un cambio de mentalidad. Lo que hemos notado es que a muchas personas les da pena mostrar su código y preguntar para no parecer ignorantes. Pero &lt;strong&gt;aceptar nuestra ignorancia es el primer paso para aprender&lt;/strong&gt;. Quitarte esa barrera mental es fundamental para que tengas éxito en cualquiera de nuestros programas online.&lt;/p&gt;

&lt;p&gt;Las asesorías no tienen que ser exclusivamente de los retos y proyectos del programa. También te podemos guiar en tus proyectos personales o en tu trabajo (siempre y cuando esté relacionado con las tecnologías que enseñamos). De hecho esa es una de las mejores formas de aprender!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Recuerda que en &lt;a href=&quot;https://makeitreal.camp/&quot;&gt;Make it Real&lt;/a&gt; cuentas con asesorías ilimitadas&lt;/strong&gt;. Los mentores estamos disponibles de 7am a 12pm aproximadamente, y generalmente respondemos en menos de 1 hora. Si necesitas ayuda en un horario diferente lo podemos coordinar con antelación.&lt;/p&gt;

&lt;p&gt;La mayoría de preguntas las podemos contestar por nuestro chat interno, pero hay veces que es mejor hacer una videollamada. En ese caso asegúrate de coordinar la hora de encuentro con tu mentor, tener una buena conexión a Internet y poco ruido de fondo.&lt;/p&gt;

&lt;p&gt;En &lt;a href=&quot;https://makeitreal.camp/&quot;&gt;Make it Real&lt;/a&gt; queremos que tengas éxito en nuestros programas. Nos hemos esforzado por crear programas estructurados, de la más alta calidad, apoyados de nuestra plataforma de aprendizaje y mentores experimentados que te van a guiar y ayudar. Pero necesitamos que hagas tu parte: que seas constante y te apoyes en nosotros para acelerar tu aprendizaje.&lt;/p&gt;

&lt;p&gt;Te recomiendo estos otros posts relacionados en nuestro blog:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/saber-programar-y-como-aprender/&quot;&gt;¿Qué significa saber programar y cómo aprender?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/consejos-para-aprender-a-programar/&quot;&gt;3 consejos para aprender a programar&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/que-hace-diferente-a-make-it-real/&quot;&gt;¿Qué hace diferente a Make it Real?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Germán Escobar</name></author><summary type="html">Quizá la principal ventaja de nuestros programas es la guía y retroalimentación de los mentores. En este post aprenderás cómo aprovecharlos al máximo para acelerar tu aprendizaje.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/traffic-light.jpeg" /></entry><entry><title type="html">El nombre Make it Real</title><link href="http://blog.makeitreal.camp/el-nombre-make-it-real/" rel="alternate" type="text/html" title="El nombre Make it Real" /><published>2017-08-31T07:00:00-04:00</published><updated>2017-08-31T07:00:00-04:00</updated><id>http://blog.makeitreal.camp/el-nombre-make-it-real</id><content type="html" xml:base="http://blog.makeitreal.camp/el-nombre-make-it-real/">&lt;p&gt;La recomendación fue clara: Make it Real es un nombre muy genérico y eso lo hace difícil de posicionar en buscadores. Además, la terminación poco conocida &lt;code class=&quot;highlighter-rouge&quot;&gt;.camp&lt;/code&gt; no iba a colaborar 😂&lt;!-- more --&gt; (por cierto, el &lt;code class=&quot;highlighter-rouge&quot;&gt;.camp&lt;/code&gt; es de Boot&lt;strong&gt;camp&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;Pero &lt;strong&gt;Make it Real&lt;/strong&gt; era precisamente el mensaje que quería expresar. Pensamos dejarlo en español (&lt;strong&gt;hazlo realidad&lt;/strong&gt;) pero, por un lado, no sonaba bien y, por otro, saber qué significa &lt;strong&gt;Make it Real&lt;/strong&gt; es el mínimo nivel de Inglés que esperamos de una persona que desee ingresar a cualquiera de nuestros programas.&lt;/p&gt;

&lt;p&gt;Fue una gran apuesta. Pero hoy, después de más de tres años, seguimos firmes con él. Puede que no seamos el primer resultado en Google, pero &lt;strong&gt;Make it Real&lt;/strong&gt; es parte fundamental de nuestra filosofía: &lt;strong&gt;ayudar a cada uno de nuestros alumnos a hacer su sueño realidad&lt;/strong&gt;, ya sea encontrar un (mejor) empleo o crear sus propios productos digitales. Y eso significa concentrarse en la calidad por encima de la cantidad.&lt;/p&gt;</content><author><name>Germán Escobar</name></author><summary type="html">La recomendación fue clara: Make it Real es un nombre muy genérico y eso lo hace difícil de posicionar en buscadores. Además, la terminación poco conocida .camp no iba a colaborar 😂</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/bg-makeitreal.jpeg" /></entry><entry><title type="html">¿Por qué no es tarde para cambiar de carrera?</title><link href="http://blog.makeitreal.camp/por-que-no-es-tarde-para-cambiar-de-carrera/" rel="alternate" type="text/html" title="¿Por qué no es tarde para cambiar de carrera?" /><published>2017-08-15T07:00:00-04:00</published><updated>2017-08-15T07:00:00-04:00</updated><id>http://blog.makeitreal.camp/por-que-no-es-tarde-para-cambiar-de-carrera</id><content type="html" xml:base="http://blog.makeitreal.camp/por-que-no-es-tarde-para-cambiar-de-carrera/">&lt;p&gt;Siempre me ha gustado considerarme un emprendedor. Siempre he creído que emprender es tener una idea de negocio y sacar esta idea adelante. Hoy precisamente me dio la curiosidad y quise aprender más, no de lo que significa ser emprendedor, sino de saber más de los origenes de esta palabra, tan común hoy en día.&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;Al buscar emprendimiento en Google el primer resultado que obtuve fue la definición de esta palabra, que fue la siguiente: “Inicio de una actividad que exige esfuerzo o trabajo, o tiene cierta importancia o envergadura.”&lt;/p&gt;

&lt;p&gt;Ahora teniendo claro que el emprendimiento no es solo crear un negocio sino tomar riesgos para tomar acción sobre cualquier situación, decidí que era momento de compartir mi experiencia, mi historia y las razones de porque hoy en día, aún siendo empleado por primera vez en mi vida, me considero más emprendedor que en muchas otras situaciones de mi vida.&lt;/p&gt;

&lt;p&gt;Hace ya unos 6 meses que decidí hacer un cambio en mi vida profesional. Los resultados que estaba obteniendo en los negocios que estaba “emprendiendo” en aquellos días no eran los que yo esperaba, lo que hacía me gustaba pero no me sentía particularmente apasionado por muchos de los aspectos de mis actividades diarias. Fue en este momento en el que tomé una decisión un poco radical. Dejar todo atrás y empezar de cero un nuevo proyecto, un nuevo camino, asumir un nuevo reto. Y fue en este momento en que llegó a mi vida la programación (anteriormente había leído algo pero nunca había tenido la oportunidad de ir más a fondo). Por muchos aspectos como la comunidad, los recursos y, no lo puedo negar, también el aspecto financiero, me atrajo. Decidí que aprender a programar sería mi nuevo camino, mi nuevo reto.&lt;/p&gt;

&lt;p&gt;Para ponerlos un poco más en contexto: tengo 26 años, pase 5 años de mi vida en la universidad donde me gradué de Administración de Empresas Agropecuarias, luego pase 2 años en una startup de operaciones turísticas, vivo con mi novia, tengo tantos problemas como una persona común, tengo tantas obligaciones como una persona común. Tomar esta decisión significaría más problemas personales, más problemas económicos, incertidumbre por no saber hacía donde iba, ni cuando iba a llegar. Aún así la decisión estaba clara para mi, mi felicidad sopesaba todas las desventajas e inconvenientes.&lt;/p&gt;

&lt;p&gt;No fue algo fácil pero llegó el momento de buscar trabajo donde podría poner a prueba todo lo que había aprendido, y donde finalmente sabría si había o no tomado la decisión correcta. Al igual que siendo Administrador de Empresas Agropecuarias, Operador turístico no demoraron en llegar los “no” y los rechazos, empresas tras empresas me rechazaban por mi falta de experiencia y conocimiento, pero algo era totalmente diferente, era feliz, me gustaba lo que hacía y no estaba dispuesto a aceptar el fracaso. Continue buscando hasta que finalmente la oportunidad se dio. Hoy en día trabajo como programador, y definitivamente no cambiaría el trabajo que tengo por ninguno de los que he tenido anteriormente.&lt;/p&gt;

&lt;p&gt;Si yo pude, ¿Tu por qué no?&lt;/p&gt;

&lt;p&gt;¡Atrévete a soñar!&lt;/p&gt;

&lt;p&gt;Finalmente me gustaría resaltar que durante todo este proceso tuve la fortuna de contar con el apoyo incondicional de algunas personas (especialmente por parte de mi novia Daniela Olaya), y de encontrarme con un gran programa como lo es Make it Real con grandes mentores y excelentes compañeros que hicieron del recorrido algo más ameno.&lt;/p&gt;

&lt;p&gt;P.S Mi novia también renunció a su trabajo donde era infeliz y ahora empezó su propio negocio de adiestramiento canino.&lt;/p&gt;</content><author><name>Simón Hoyos</name></author><summary type="html">Siempre me ha gustado considerarme un emprendedor. Siempre he creído que emprender es tener una idea de negocio y sacar esta idea adelante. Hoy precisamente me dio la curiosidad y quise aprender más, no de lo que significa ser emprendedor, sino de saber más de los origenes de esta palabra, tan común hoy en día.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/never-too-late.jpg" /></entry><entry><title type="html">El protocolo HTTP</title><link href="http://blog.makeitreal.camp/el-protocolo-http/" rel="alternate" type="text/html" title="El protocolo HTTP" /><published>2017-08-09T07:00:00-04:00</published><updated>2017-08-09T07:00:00-04:00</updated><id>http://blog.makeitreal.camp/el-protocolo-http</id><content type="html" xml:base="http://blog.makeitreal.camp/el-protocolo-http/">&lt;p&gt;El protocolo &lt;strong&gt;HTTP&lt;/strong&gt; (HyperText Transfer Protocol) es quizá el protocolo más importante que debemos conocer como desarrolladores Web y la razón por la que muchos tenemos hoy un empleo ;)&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;Fue diseñado para transmitir &lt;strong&gt;HTML&lt;/strong&gt; (HyperText Markup Language) pero hoy en día se utiliza para transmitir todo tipo de documentos (imágenes, audio, video, PDF, etc.) y para crear aplicaciones Web.&lt;/p&gt;

&lt;div class=&quot;well&quot;&gt;
&lt;p&gt;Un &lt;strong&gt;protocolo&lt;/strong&gt; es un documento que define las reglas y la estructura de los mensajes que se van a intercambiar entre máquinas.&lt;/p&gt;

&lt;p&gt;Además de &lt;strong&gt;HTTP&lt;/strong&gt;, ejemplos de protocolos incluyen &lt;strong&gt;SMTP&lt;/strong&gt; (Simple Mail Transfer Protocol) para transmitir mensajes de correo electrónico y &lt;strong&gt;FTP&lt;/strong&gt; (File Transfer Protocolo) para transmitir archivos.&lt;/p&gt;

&lt;p&gt;Sin embargo, cualquier persona puede crear un protocolo. &lt;a href=&quot;https://skype.com/&quot; target=&quot;_blank&quot;&gt;Skype&lt;/a&gt;, por ejemplo, desarrolló su &lt;a href=&quot;https://en.wikipedia.org/wiki/Skype_protocol&quot; target=&quot;_blank&quot;&gt;propio protocolo&lt;/a&gt; de comunicación peer-to-peer.&lt;/p&gt;

&lt;p&gt;El documento completo del protocolo HTTP lo puedes encontrar en &lt;a href=&quot;https://www.ietf.org/rfc/rfc2068.txt&quot; target=&quot;_blank&quot;&gt;este enlace&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;HTTP&lt;/strong&gt; es un protocolo &lt;strong&gt;cliente-servidor&lt;/strong&gt;, lo que significa que el cliente envía una petición al servidor y espera un mensaje de respuesta del servidor. Es un protocolo &lt;strong&gt;sin estado&lt;/strong&gt;, lo que significa que el servidor no guarda información del cliente, cada petición es independiente de las demás.&lt;/p&gt;

&lt;h2 id=&quot;mensajes-http&quot;&gt;Mensajes HTTP&lt;/h2&gt;

&lt;p&gt;Un mensaje &lt;strong&gt;HTTP&lt;/strong&gt; (no importa si es de petición o respuesta) se compone de 3 partes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;La primera línea (que es diferente para la petición y la respuesta).&lt;/li&gt;
  &lt;li&gt;Los encabezados.&lt;/li&gt;
  &lt;li&gt;El cuerpo (opcional)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Veamos un ejemplo de un mensaje de petición (sin cuerpo):&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /index.html HTTP/1.1
Host: wikipedia.org
Accept: text/html

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;En este ejemplo estamos solicitando el recurso &lt;code class=&quot;highlighter-rouge&quot;&gt;/index.html&lt;/code&gt; de &lt;a href=&quot;https://wikipedia.org&quot; target=&quot;_blank&quot;&gt;wikipedia.org&lt;/a&gt;. La primera línea del mensaje de petición se compone de:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;El verbo (en este caso &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;El recurso (en este caso &lt;code class=&quot;highlighter-rouge&quot;&gt;/index&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;La versión de HTTP (en este caso &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP/1.1&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ahora veamos un ejemplo de un mensaje de respuesta:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HTTP/1.1 200 OK
Server: wikipedia.org
Content-Type: text/html
Content-Lenght: 2026

&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  …
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;La primera línea del mensaje de respuesta se compone de:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;La versión de HTTP (&lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP/1.1&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;El código de respuesta (&lt;code class=&quot;highlighter-rouge&quot;&gt;200 OK&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La siguiente imagen muestra mejor las partes de cada mensaje:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/http-messages.jpg&quot; alt=&quot;Concurrencia basada en eventos&quot; class=&quot;photo border&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;el-verbo-http&quot;&gt;El verbo HTTP&lt;/h3&gt;

&lt;p&gt;La primera línea de un mensaje de petición empieza con un &lt;strong&gt;verbo&lt;/strong&gt; (también se le conoce como &lt;strong&gt;método&lt;/strong&gt;). Los &lt;strong&gt;verbos&lt;/strong&gt; definen la acción que se quiere realizar sobre el recurso. Los verbos más comunes son:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;GET&lt;/strong&gt;: se utiliza para solicitar un recurso.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;POST&lt;/strong&gt;: se utiliza para publicar un recurso.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;PUT&lt;/strong&gt;: se utiliza para reemplazar un recurso.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;DELETE&lt;/strong&gt;: se utiliza para eliminar un recurso.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Existen otros pero estos son los más comunes.&lt;/p&gt;

&lt;p&gt;Cuando ingresas a una página desde un navegador, por debajo el navegador envía un mensaje &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt;, lo mismo cuando oprimes un vínculo a otra página.&lt;/p&gt;

&lt;h2 id=&quot;el-código-de-respuesta&quot;&gt;El código de respuesta&lt;/h2&gt;

&lt;p&gt;La primera línea de un mensaje de respuesta tiene un código de 3 dígitos que le indica al cliente cómo interpretar la respuesta.&lt;/p&gt;

&lt;p&gt;Los códigos de respuesta se dividen en cinco categorías dependiendo del dígito con el que inician:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;1XX&lt;/strong&gt;: Información&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2XX&lt;/strong&gt;: Éxito&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;3XX&lt;/strong&gt;: Redirección&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;4XX&lt;/strong&gt;: Error en el cliente&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;5XX&lt;/strong&gt;: Error en el servidor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Seguramente estás familiarizado(a) con el famoso error &lt;strong&gt;404&lt;/strong&gt; que retornan los servidores cuando el recurso no fue encontrado. O con el error &lt;strong&gt;500&lt;/strong&gt; cuando ocurre un error en el servidor. Pero existen muchos más.&lt;/p&gt;

&lt;h2 id=&quot;los-encabezados&quot;&gt;Los encabezados&lt;/h2&gt;

&lt;p&gt;Los encabezados brindan información adicional sobre la petición o la respuesta. Los encabezados tienen la siguiente sintaxis:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-none&quot;&gt;[nombre del encabezado]: [valor del encabezado]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Encabezados comunes incluyen:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Content-Type&lt;/code&gt;: el tipo de contenido que se está enviando en el cuerpo de un mensaje de petición, por ejemplo &lt;code class=&quot;highlighter-rouge&quot;&gt;text/html&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Accept&lt;/code&gt;: el tipo de contenido que el cliente está esperando.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;User-Agent&lt;/code&gt;: el tipo de navegador que está haciendo la petición&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La siguiente imagen muestra, en las &lt;a href=&quot;/herramientas-de-desarrollador-o-developer-tools&quot; target=&quot;_blank&quot;&gt;herramientas de desarrollo de Chrome&lt;/a&gt;, el mensaje de petición y respuesta cuando hacemos una petición a &lt;code class=&quot;highlighter-rouge&quot;&gt;http://google.com.co/lsdifs&lt;/code&gt;. Fíjate que el código de respuesta es &lt;code class=&quot;highlighter-rouge&quot;&gt;404 Not Found&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/http-request.jpg&quot; class=&quot;photo border&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;url&quot;&gt;URL&lt;/h2&gt;

&lt;p&gt;Un &lt;strong&gt;URL&lt;/strong&gt; (Uniform Resource Locator) se utiliza para ubicar un recurso en Internet. Los &lt;strong&gt;URLs&lt;/strong&gt; no solo se pueden utilizar para el protocolo HTTP, se utilizan en muchos otros protocolos.&lt;/p&gt;

&lt;p&gt;La siguiente imagen muestra las partes de un &lt;strong&gt;URL&lt;/strong&gt; utilizando dos ejemplos:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s3.amazonaws.com/makeitreal/images/full-stack-curriculum/url.jpg&quot; alt=&quot;URL&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Esquema:&lt;/strong&gt; El esquema define el protocolo a utilizar, para HTTP puede ser &lt;code class=&quot;highlighter-rouge&quot;&gt;http&lt;/code&gt; o &lt;code class=&quot;highlighter-rouge&quot;&gt;https&lt;/code&gt; (el protocolo seguro de HTTP).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Host:&lt;/strong&gt; La IP o el nombre del servidor que se quiere acceder (p.e. 127.0.0.1, localhost, google.com, www.google.com.co, etc.)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Puerto:&lt;/strong&gt; El puerto en el que está escuchando el servidor HTTP. Si se omite se asume que es el 80.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Path:&lt;/strong&gt; La ruta al recurso que se quiere acceder.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Query String:&lt;/strong&gt; Contiene información adicional para el servidor en forma de propiedades (&lt;code class=&quot;highlighter-rouge&quot;&gt;atributo=valor&lt;/code&gt;). Las propiedades se separan por &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Fragmento:&lt;/strong&gt; La referencia a una ubicación interna del documento.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Germán Escobar</name></author><summary type="html">El protocolo HTTP (HyperText Transfer Protocol) es quizá el protocolo más importante que debemos conocer como desarrolladores Web y la razón por la que muchos tenemos hoy un empleo ;)</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/lights.jpeg" /></entry></feed>