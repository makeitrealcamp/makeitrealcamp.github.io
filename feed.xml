<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="es"><generator uri="https://jekyllrb.com/" version="3.5.1">Jekyll</generator><link href="http://blog.makeitreal.camp/feed.xml" rel="self" type="application/atom+xml" /><link href="http://blog.makeitreal.camp/" rel="alternate" type="text/html" hreflang="es" /><updated>2020-04-27T12:35:00-05:00</updated><id>http://blog.makeitreal.camp/</id><title type="html">El Blog de Make it Real</title><subtitle>Un espacio para compartir conocimiento en programación y emprendimiento.</subtitle><entry><title type="html">Cómo piensa un programador?</title><link href="http://blog.makeitreal.camp/como-piensa-un-programador/" rel="alternate" type="text/html" title="Cómo piensa un  programador?" /><published>2020-04-27T02:00:00-05:00</published><updated>2020-04-27T02:00:00-05:00</updated><id>http://blog.makeitreal.camp/como-piensa-un-programador</id><content type="html" xml:base="http://blog.makeitreal.camp/como-piensa-un-programador/">&lt;p&gt;Ser un programador no significa sólo tener unos conocimientos, significa desarrollar la mentalidad adecuada.&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;Ningún programador se las sabe todas, no importa cuanto tiempo lleve programando. De hecho, la cantidad de información que pueda tener el programador más sabio del planeta no va a ser más que una mínima fracción de todo el conocimiento en programación actual, que crece cada día.&lt;/p&gt;

&lt;p&gt;Pero entonces cómo hace un programador para hacer su trabajo si no sabe prácticamente nada?&lt;/p&gt;

&lt;p&gt;La respuesta es que los programadores son increíblemente recursivos.&lt;/p&gt;

&lt;p&gt;Supongamos que necesitamos crear un componente que permita al usuario seleccionar una fecha, algo así:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/datepicker.jpg&quot; alt=&quot;Selector de Fecha&quot; class=&quot;photo&quot; style=&quot;max-width: 200px; border: 1px solid #ccc;&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;photo-description&quot;&gt;Un selector de fecha, una solicitud muy común en el desarrollo Web.&lt;/p&gt;

&lt;p&gt;Quizá la primera pregunta que se hace un programador es: ¿ya he hecho esto antes? Si la respuesta es afirmativa el siguiente paso es buscar el proyecto y hacer copy-paste, hecho!&lt;/p&gt;

&lt;p&gt;Si no lo ha hecho antes, la siguiente pregunta es ¿será que alguien ya lo ha hecho antes? El 98% de los problemas que existen en programación ya han sido solucionados y documentados. Sólo debes buscar en Internet (que es &lt;strong&gt;la habilidad&lt;/strong&gt; más importante que desarrollamos los programadores).&lt;/p&gt;

&lt;p&gt;La mayoría de veces el trabajo del programador es así de fácil, pero no siempre (si no nos pagarían esos ridículos salarios). Sí, algunas veces nos toca pensar, adaptar, arreglar, frustrarnos por errores simples, etc. Una buena práctica en estos casos es documentar nuestra solución en un post, quizá le pueda servir a otros desarrolladores más adelante.&lt;/p&gt;

&lt;p&gt;En pocas palabras el trabajo de un programador es lograr que las cosas funcionen. Idealmente siempre deberíamos hacer un paso adicional y es organizar el código para que sea fácil de leer y entender. Desafortunadamente este no es siempre el caso y la mayoría de proyectos de software se convierten en retazos de código copiados de Internet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;El programador es una persona muy práctica enfocada en solucionar un reto a la vez&lt;/strong&gt;. Por esta razón es bueno tener amigos programadores o un mentor a quién preguntar, un guía.&lt;/p&gt;

&lt;p&gt;Eso no significa que los programadores no aprendamos de forma más estructurada, de hecho &lt;strong&gt;a muchos programadores nos encanta aprender constantemente, pero es un proceso paralelo a nuestro trabajo&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Por poner un ejemplo, una persona normal pensaría que para hacer un componente como el selector de fecha que vimos antes, debe aprender HTML, CSS y JavaScript, o es posible que ni siquiera sepa qué debe aprender. Pero igual, esa persona está pensando hacerlo desde cero, es decir, no está pensando como programador.&lt;/p&gt;

&lt;p&gt;Aprender HTML, CSS y JavaScript (o cualquier otra tecnología) está perfectamente bien, pero es muy probable que después de hacer varios cursos encontremos que en ninguno expliquen lo que queremos hacer. En cambio, es posible que con una simple búsqueda en Internet encontremos exactamente lo que necesitamos. Así es la vida y me ha pasado innumerables veces.&lt;/p&gt;

&lt;p&gt;En general, una recomendación para aprender una nueva tecnología (después de terminar Make it Real ;) es empezar con algunos turoriales para tener una idea de lo que es posible con esa tecnología, hacer algún proyecto, y después si profundizar en la documentación o hacer un curso más estructurado.&lt;/p&gt;

&lt;p&gt;La pregunta para terminar es entonces: qué quieres construir hoy? Si logras hacerlo (sin importar cómo) entonces felicitaciones!, estás pensando como programador.&lt;/p&gt;</content><author><name>Germán Escobar</name></author><summary type="html">Ser un programador no significa sólo tener unos conocimientos, significa desarrollar la mentalidad adecuada.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/como-piensa-un-programador.jpg" /></entry><entry><title type="html">Por qué aprender Data Science?</title><link href="http://blog.makeitreal.camp/por-que-aprender-data-science/" rel="alternate" type="text/html" title="Por qué aprender Data Science?" /><published>2020-04-15T02:00:00-05:00</published><updated>2020-04-15T02:00:00-05:00</updated><id>http://blog.makeitreal.camp/por-que-aprender-data-science</id><content type="html" xml:base="http://blog.makeitreal.camp/por-que-aprender-data-science/">&lt;p&gt;Data Science es una de las áreas de mayor crecimiento en la actualidad y una gran oportunidad para las personas que quieren dar el siguiente paso en sus carreras como programadores.&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;Con la cantidad de información que las empresas están generando cada día no es extraño que la demanda por científicos de datos esté aumentando rápidamente. Todo programador debería poder, como mínimo, crear un &lt;a href=&quot;https://jupyter.org/&quot;&gt;Jupyter Notebook&lt;/a&gt;, cargar algunos datos, hacer algunas visualizaciones y utilizar los modelos que ya existen para clasificar y predecir información con Machine Learning.&lt;/p&gt;

&lt;p&gt;En Make it Real hemos creado un curso que te permitirá entender los conceptos, metodologías y herramientas que se utilizan para realizar estas tareas. Estoy seguro que abrirá tu mente a otro nivel y verás todas las posibilidades que existen ahora y lo que va a ser posible en el futuro.&lt;/p&gt;

&lt;p&gt;Los detalles del programa la encuentras en el siguiente enlace, ahí podrás solicitar información de precios y conocer el proceso de inscripción:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://makeitreal.camp/data-science-online?utm_source=blog&amp;amp;utm_medium=web&amp;amp;utm_campaign=datascience-2020-1&quot;&gt;https://makeitreal.camp/data-science-online&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Espero que te animes a dar este siguiente paso y recuerda, ¡nunca dejes de aprender!&lt;/p&gt;</content><author><name>Germán Escobar</name></author><summary type="html">Data Science es una de las áreas de mayor crecimiento en la actualidad y una gran oportunidad para las personas que quieren dar el siguiente paso en sus carreras como programadores.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/data-science-2.jpg" /></entry><entry><title type="html">Sobre el aprendizaje</title><link href="http://blog.makeitreal.camp/sobre-el-aprendizaje/" rel="alternate" type="text/html" title="Sobre el aprendizaje" /><published>2020-02-17T02:00:00-05:00</published><updated>2020-02-17T02:00:00-05:00</updated><id>http://blog.makeitreal.camp/sobre-el-aprendizaje</id><content type="html" xml:base="http://blog.makeitreal.camp/sobre-el-aprendizaje/">&lt;p&gt;Dicen que hay dos tipos de aprendices de idiomas: los que quieren hacerse entender y los que no se quieren equivocar. Los primeros avanzan increíblemente rápido, los segundos se quedan atascados, a veces sin lograr mantener una conversación básica. ¿Por qué ocurre esto?&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;Yo creo que el principal problema radica en la forma en que estamos acostumbrados a aprender desde el colegio.&lt;/p&gt;

&lt;p&gt;Cuando nacemos iniciamos un proceso de prueba y error para aprender a caminar y hablar. No estamos preocupados por caminar de forma graciosa, o incluso caernos. No nos importa si conjugamos bien el verbo poner (“yo poní”) o saber (“yo sabo”). Estamos más enfocados en el fin que en hacerlo “correctamente”.&lt;/p&gt;

&lt;p&gt;Lo curioso es que, en el proceso de prueba y error, vamos encontrando la forma correcta.&lt;/p&gt;

&lt;p&gt;Desafortunadamente, nuestro sistema educativo castiga los errores y nuestra actitud hacia el aprendizaje cambia para siempre, al menos en la mayoría de personas. Nuestro objetivo principal al aprender es evitar los errores.&lt;/p&gt;

&lt;p&gt;Las consecuencias son devastadoras. Primero, esta es la razón, creo yo, que muy pocas personas se atreven a aprender algo nuevo.&lt;/p&gt;

&lt;p&gt;Segundo, los que se atreven a aprender quieren que les salga bien al primer intento. Aún peor, quieren aprender todo lo que hay que saber del tema antes de atreverse a ponerlo en práctica, y esto los hace, desafortunadamente, malos aprendices.&lt;/p&gt;

&lt;p&gt;Es como si un niño quisiera aprender toda la teoría detrás de montar bicicleta antes de hacer su primer intento y esperar que nunca se vaya a caer porque ya lo aprendió todo. Eso no tiene ningún sentido y, sin embargo, es la forma en que la mayoría de personas esperan aprender.&lt;/p&gt;

&lt;p&gt;Pero la consecuencia más lastimosa es que muchos lo intentan una única vez, y si no funciona, no lo vuelven a intentar.&lt;/p&gt;

&lt;h2 id=&quot;cómo-cambiar-nuestra-actitud&quot;&gt;¿Cómo cambiar nuestra actitud?&lt;/h2&gt;

&lt;p&gt;Imagina en algo que has querido aprender pero no has podido. ¿Qué te ha detenido?&lt;/p&gt;

&lt;p&gt;No, no es el tiempo. El tiempo es fundamental para el aprendizaje pero si uno quiere aprender algo, seguro encuentra el tiempo. No, tampoco es alguien que enseñe bien, las cosas que vale la pena aprender no se pueden enseñar.&lt;/p&gt;

&lt;p&gt;La principal barrera para aprender no es intelectual, es emocional. Es la actitud que tenemos hacia el aprendizaje.&lt;/p&gt;

&lt;p&gt;Empecemos por aclarar que no existe tal cosa como aprender algo. Uno no puede dividir el mundo entre los que saben y no saben. Por ejemplo, cuando decimos que una persona aprendió otro idioma nos referimos a que es capaz de sostener una conversación con otras personas, entender y hacerse entender, por así decirlo. No significa que se sepa todas las palabras del diccionario ni todas las reglas gramaticales. Nadie exigiría eso.&lt;/p&gt;

&lt;p&gt;Lo que existe en los idiomas son unos niveles de competencia, que no son exactos (el nivel de aprendizaje es continuo, no discreto), pero que nos ofrecen una forma práctica de compararnos con otras personas.&lt;/p&gt;

&lt;p&gt;Para cambiar nuestra actitud hacia el aprendizaje debemos entender que las cosas que vale la pena aprender no se pueden enseñar. Y, desafortunadamente, muchas personas esperan que les enseñen. Lo que uno necesita son mentores que lo guíen y lo corrijan (le den retroalimentación). Al final, los únicos responsables de nuestro aprendizaje somos nosotros mismos.&lt;/p&gt;

&lt;p&gt;Es importante mentalizarnos en que vamos a comenter errores, pero que en los errores y la frustración está el aprendizaje. Esta es la parte más difícil de cambiar porque nos han acostumbrado a sentirnos mal cuando cometemos un error.&lt;/p&gt;

&lt;p&gt;Las dos características más importantes de un buen aprendiz son la humildad y el optimismo. Por un lado, aceptar que estamos aprendiendo y que tenemos derecho a cometer errores. Y, por otro lado, creer que eventualmente vamos a lograr lo que nos propusimos (tocar esa canción de piano, llegar a ese nivel de ajedrez, etc.).&lt;/p&gt;

&lt;p&gt;No seas el aprendiz que está pensando en evitar los errores, enfócate en lo que quieres lograr. El buen aprendiz no quiere aprender italiano, quiere hacerse entender en una conversación, y en la siguiente. El buen aprendiz no quiere aprender piano, quiere tocar una canción, y después la otra. El aprendizaje se convierte en un medio para lograr un objetivo.&lt;/p&gt;

&lt;h2 id=&quot;en-programación&quot;&gt;En programación&lt;/h2&gt;

&lt;p&gt;¿Cómo aplicamos todo esto a la programación? Bueno, en la programación también existen los dos mismos tipos de aprendices: los que quieren aprender todo primero para después hacer su primera aplicación de forma correcta, y los que quieren hacer que la aplicación funcione sin importar si es la forma correcta o no.&lt;/p&gt;

&lt;p&gt;Y de nuevo, los primeros tienden a tener muchas dificultades para avanzar y encontrar un empleo, los segundos avanzan increíblemente rápido y consiguen los mejores empleos (o crean sus propias compañías).&lt;/p&gt;

&lt;p&gt;Tampoco existe tal cosa como “aprender a programar”. Cuando uno dice que alguien sabe programar es porque se volvió un experto buscando en Internet y haciendo copy-paste de otros proyectos que hizo buscando en Internet (tutoriales, blog posts, etc.).&lt;/p&gt;

&lt;p&gt;Aprender a programar no significa saber todas las reglas sintácticas de un lenguaje, sus objetos y métodos. Nadie exigiría eso. Y al igual que con los idiomas, también hay niveles de aprendizaje.&lt;/p&gt;

&lt;p&gt;En la programación también vamos a cometer muchos errores. La verdad es que la programación es muy frustrante: la configuración de las herramientas, la rigidez de la sintaxis (¡faltaba una coma!), las diferentes versiones de las librerías, etc.&lt;/p&gt;

&lt;p&gt;Después de más de 20 años programando puedo decir que la frustración nunca se va, pero uno aprende a vivir con ella. Cada aplicación tiene sus propios retos, sus propios aprendizajes. Pero uno es optimista, uno sabe que con el tiempo suficiente para investigar y fallar se pueden solucionar la gran mayoría de problemas (aunque no todos, claro).&lt;/p&gt;

&lt;p&gt;Por último, los buenos programadores primero se concentran en hacer funcionar lo que necesitan hacer funcionar, después buscan cómo se puede hacer mejor o piden retroalimentación de una persona con más experiencia a ver si la forma es la correcta. Y muchas veces es necesario reescribir una aplicación o funcionalidad varias veces, pero ahí es donde más se aprende. El peor error que uno puede cometer en programación es tratar de hacerlo correcto desde el principio. Es la forma más fácil de atascarse y fracasar.&lt;/p&gt;

&lt;p&gt;Mi consejo para una persona que quiere aprender a programar es tener una idea de una aplicación quiera hacer. Entre más ganas uno tenga de hacerla, menos se atascará en los detalles, y más rápido avanzará. Obviamente, empieza con algo sencillo, sigue tutoriales de algo parecido y ve adaptando lo necesario.&lt;/p&gt;</content><author><name>Germán Escobar</name></author><summary type="html">Dicen que hay dos tipos de aprendices de idiomas: los que quieren hacerse entender y los que no se quieren equivocar. Los primeros avanzan increíblemente rápido, los segundos se quedan atascados, a veces sin lograr mantener una conversación básica. ¿Por qué ocurre esto?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/seaport-during-daytime.jpg" /></entry><entry><title type="html">La magia de la criptografía asimétrica</title><link href="http://blog.makeitreal.camp/la-magia-de-la-criptografia-asimetrica/" rel="alternate" type="text/html" title="La magia de la criptografía asimétrica" /><published>2020-02-07T02:00:00-05:00</published><updated>2020-02-07T02:00:00-05:00</updated><id>http://blog.makeitreal.camp/la-magia-de-la-criptografia-asimetrica</id><content type="html" xml:base="http://blog.makeitreal.camp/la-magia-de-la-criptografia-asimetrica/">&lt;p&gt;En este post vamos a ver cómo funciona el cifrado de mensajes usando llaves públicas y privadas, y cómo puedes intercambiar mensaje cifrados con otras personas escribiendo un poco de código JavaScript.&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;Cuando se cifra un mensaje se utiliza una llave (o clave) para sustituir cada letra por una letra diferente (o un símbolo) con el fin de ocultar el contenido.&lt;/p&gt;

&lt;p&gt;Imagina que &lt;strong&gt;Pedro&lt;/strong&gt; le quiere enviar a &lt;strong&gt;María&lt;/strong&gt; un mensaje cifrado. Una forma de hacerlo con llaves públicas y privadas sería la siguiente:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;María&lt;/strong&gt; crea una llave pública y una privada (si no tiene unas ya creadas).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;María&lt;/strong&gt; envía su llave pública a &lt;strong&gt;Pedro&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Pedro&lt;/strong&gt; cifra el mensaje utilizando la llave pública de &lt;strong&gt;María&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Pedro&lt;/strong&gt; le envía el mensaje cifrado a &lt;strong&gt;María&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;María&lt;/strong&gt; utiliza su llave privada para descifrar el mensaje.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A esta técnica se le conoce como &lt;strong&gt;criptografía asimétrica&lt;/strong&gt; porque la llave para cifrar la información (la llave pública) es diferente a la llave para descifrarla (llave privada).&lt;/p&gt;

&lt;p&gt;Antes del desarrollo de la criptografía asimétrica, la única forma de cifrar información era utilizando la misma llave para cifrar y descifrar la información (criptografía simétrica).&lt;/p&gt;

&lt;p&gt;El problema de la &lt;strong&gt;criptografía simétrica&lt;/strong&gt; (que utiliza la misma llave para cifrar y descifrar) es la distribución de la llave a todos los interesados. La &lt;strong&gt;criptografía asimétrica&lt;/strong&gt; soluciona este problema porque cada persona puede compartir su llave pública para que otros le envién mensajes cifrados, y utilizar su llave privada para descifrar esos mensajes.&lt;/p&gt;

&lt;p&gt;Una llave (pública o privada) no es más que una cadena de caracteres. Por ejemplo, la siguiente es una llave pública que tengo configurada en &lt;a href=&quot;https://github.com/&quot;&gt;Github&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3ftr8QCuN1AIcdPOYXjYfKl2gABIv7zspBaSUySy83i9Se9a11mybifFOtVXR6DESaHu8GYC1ThNLSkC8LAOVTCrh/TBfjKXpTr4C22jvSwPUMdFF7QbpqWNrjLlfIzBfWZqTh+xOAhuGtWZZqIq3lx9BKQeSFWY7kDSDKluTp5GezSZKq64L8YL0gROXd+8dFWY2CbGLQKoadzTJd69VB5P+QgN/Q1NpSvZPNE6aEJD4bHBOgyUqr9yh/zBQakT7RNzc4ga3b/tAo630CE5ZsHuz5IIvLDTi9jSV/ICO182cZWHYn5aGYSkBxSnZZOjzYwO6jEXyzOuf/Dxrsawt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Puedes consultar las llaves públicas de cualquier usuario en &lt;a href=&quot;https://github.com/&quot;&gt;Github&lt;/a&gt; ingresando a la URL &lt;code class=&quot;highlighter-rouge&quot;&gt;https://github.com/&amp;lt;nombre-de-usuario&amp;gt;.keys&lt;/code&gt; (reemplaza &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;nombre-de-usuario&amp;gt;&lt;/code&gt; por el usuario correspondiente). Por eso se llaman &lt;strong&gt;llaves públicas&lt;/strong&gt;, porque pueden ser compartidas públicamente.&lt;/p&gt;

&lt;p&gt;Por ejemplo, puedes ver mis llaves públicas si ingresas a &lt;a href=&quot;https://github.com/germanescobar.keys&quot;&gt;https://github.com/germanescobar.keys&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nota:&lt;/strong&gt; Si no te aparecen llaves públicas bajo tu usuario es porque aún no has creado ninguna. Sigue las instrucciones en &lt;a href=&quot;https://help.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent&quot;&gt;este link de Github&lt;/a&gt; para crearlas.&lt;/p&gt;

&lt;p&gt;Cualquier persona podría enviarme un mensaje cifrado utilizando mi llave pública y sólo yo voy a poder descifrar el mensaje porque tengo la llave privada almacenada en un archivo de mi computador.&lt;/p&gt;

&lt;p&gt;Lo importante es mantener la llave privada en un sitio seguro y bajo contraseña (al crear la llave privada es posible asegurarla con un &lt;code class=&quot;highlighter-rouge&quot;&gt;passphrase&lt;/code&gt;, que no es más que una contraseña).&lt;/p&gt;

&lt;h2 id=&quot;cifrando-y-descifrando-mensajes&quot;&gt;Cifrando y descifrando mensajes&lt;/h2&gt;

&lt;p&gt;Veamos entonces cómo cifrar mensajes con una llave pública y descifrarlos con una llave privada utilizando &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/&quot;&gt;Github&lt;/a&gt; almacena las llaves públicas utilizando un formato que no es compatible con lo que vamos a hacer, así que el primer paso es transformar la llave a un formato compatible.&lt;/p&gt;

&lt;p&gt;Crea un archivo llamado &lt;code class=&quot;highlighter-rouge&quot;&gt;public.key&lt;/code&gt;con el contenido de la llave pública y ejecuta el siguiente comando desde una consola:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh-keygen -f public.key -e -m PKCS8 &amp;gt; public.key.pem
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ahora crea un archivo llamado &lt;code class=&quot;highlighter-rouge&quot;&gt;encrypt.js&lt;/code&gt; con el siguiente contenido:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;crypto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'crypto'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'path'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;encrypt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pkPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;absPkPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pkPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;absPkPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'utf8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;buffer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'utf8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;encrypted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;crypto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;publicEncrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;encrypted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'base64'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;nx&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hola Mundo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;public.key.pem&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Cambia el texto &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;Hola Mundo&quot;&lt;/code&gt; por el texto que quieras cifrar. Ejecuta el archivo con el siguiente comando:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node encrypt.js
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Deberías ver el texto cifrado que puedes enviar a la persona que tenga la llave privada correspondiente a esa llave pública.&lt;/p&gt;

&lt;p&gt;Para descifrar un mensaje crea un archivo llamado &lt;code class=&quot;highlighter-rouge&quot;&gt;decrypt.js&lt;/code&gt; con el siguiente contenido:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;crypto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'crypto'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'path'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decrypt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;privateKeyPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;passphrase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;privateKeyPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'utf8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

      &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;buffer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'base64'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decrypted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;crypto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;privateDecrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;passphrase&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

      &lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;decrypted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'utf8'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;decrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;texto cifrado&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/ruta/llave/privada&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;passphrase&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Debes cambiar los primeros tres argumentos por el texto cifrado, la ruta de la llave privada y el &lt;code class=&quot;highlighter-rouge&quot;&gt;passphrase&lt;/code&gt; respectivamente.&lt;/p&gt;

&lt;p&gt;Ejecuta el programa con el siguiente comando:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node decrypt.js
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Deberías ver el mensaje original.&lt;/p&gt;

&lt;h2 id=&quot;qué-clase-de-brujería-es-esta&quot;&gt;¿Qué clase de brujería es esta?&lt;/h2&gt;

&lt;p&gt;Lo que me parece increíble de la &lt;strong&gt;criptografía asímétrica&lt;/strong&gt; es, primero, que no sea necesario ponerse de acuerdo en una llave secreta con otras personas y, segundo, que la llave pública se pueda compartir con cualquiera sin peligro, incluso con nuestros peores enemigos.&lt;/p&gt;

&lt;p&gt;La llave pública se crea a partir de la llave privada, así que las dos están estrechamente relacionadas. Sin embargo, si de alguna forma pudieramos obtener la llave privada a partir de una llave pública el sistema dejaría de funcionar. Entonces ¿cómo evitan que esto suceda?&lt;/p&gt;

&lt;p&gt;No vamos a ahondar mucho en los detalles matemáticos pero la idea principal está basada en el uso de números primos, es decir, números que sólo son divisibles por 1 y ellos mismos. Ejemplos de números primos son 5, 7, 11, 13, etc.&lt;/p&gt;

&lt;p&gt;Multiplicar dos números primos es trivial, por ejemplo &lt;code class=&quot;highlighter-rouge&quot;&gt;13 x 17 = 221&lt;/code&gt;, pero hacer el ejercicio contrario, encontrar dos números primos (los factores) cuya multiplicación da un determinado resultado es muy difícil cuando los números son muy grandes, cuando el número tiene cientos de cifras.&lt;/p&gt;

&lt;p&gt;Para crear una llave privada se seleccionan dos números primos (muy grandes) y el resultado de la multiplicación se va a convertir en la llave pública.&lt;/p&gt;

&lt;p&gt;Ahora, hay más matemática involucrada, pero si alguien encuentra una forma fácil y rápida de factorizar los números primos de cualquier número (sin importar su tamaño), todo el sistema de criptografía sobre el que depende nuestra civilización se derrumbaría por completo.&lt;/p&gt;

&lt;p&gt;Afortunadamente hoy están surgiendo otras alternativas a la multiplicación de números primos como la &lt;a href=&quot;https://es.wikipedia.org/wiki/Criptograf%C3%ADa_de_curva_el%C3%ADptica&quot;&gt;criptografía de curva elíptica&lt;/a&gt;, pero la idea es la misma, generar la llave pública a partir de la privada es muy fácil, pero lo contrario es muy difícil.&lt;/p&gt;

&lt;h2 id=&quot;otras-aplicaciones&quot;&gt;Otras aplicaciones&lt;/h2&gt;

&lt;p&gt;Hasta ahora hemos hablado de cifrar un mensaje con la llave pública y descifrarlo con la llave privada. Pero ¿será útil cifrar un mensaje con la llave privada sabiendo que cualquier persona lo va a poder descifrar con la llave pública?&lt;/p&gt;

&lt;p&gt;¡Claro que es útil! No tanto para cifrar información sino para garantizar la autenticidad de un mensaje, es decir, saber que viene de la persona o la organización indicada.&lt;/p&gt;

&lt;p&gt;Ejemplos de aplicaciones que utilizan esta técnica incluyen las &lt;a href=&quot;https://es.wikipedia.org/wiki/Firma_digital&quot;&gt;firmas digitales&lt;/a&gt; (que permiten determinar la autenticidad de un mensaje), &lt;a href=&quot;https://es.wikipedia.org/wiki/Certificado_digital&quot;&gt;certificados digitales&lt;/a&gt; (p.e. los que utilizan los sitios seguros con HTTPS) y las &lt;a href=&quot;https://es.wikipedia.org/wiki/Criptomoneda&quot;&gt;criptomonedas&lt;/a&gt; (p.e. Bitcoin, Ethereum, etc.), entre muchas otras.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Este post fue inspirado en un libro llamado &lt;a href=&quot;https://www.amazon.com/Code-Book-Science-Secrecy-Cryptography-ebook/dp/B004IK8PLE/ref=sr_1_2?crid=2VSNWLV86EPND&amp;amp;keywords=the+code+book&amp;amp;qid=1581102348&amp;amp;s=digital-text&amp;amp;sprefix=the+code+book%2Caps%2C206&amp;amp;sr=1-2&quot;&gt;The Code Book, de Simon Singh&lt;/a&gt; que estoy terminando de leer. En él aprendí también cómo funcionaba la &lt;a href=&quot;https://es.wikipedia.org/wiki/Enigma_(m%C3%A1quina)&quot;&gt;máquina Enigma&lt;/a&gt; utilizada por los alemanes en la segunda guerra mundial para cifrar sus comunicaciones, pero que los ingleses lograron “quebrar” como lo dramatizan en la película &lt;a href=&quot;https://es.wikipedia.org/wiki/The_Imitation_Game&quot;&gt;The Imitation Game (El Código Enigma)&lt;/a&gt; basada en la vida de &lt;a href=&quot;https://en.wikipedia.org/wiki/Alan_Turing&quot;&gt;Alan Turing&lt;/a&gt;.&lt;/p&gt;</content><author><name>Germán Escobar</name></author><summary type="html">En este post vamos a ver cómo funciona el cifrado de mensajes usando llaves públicas y privadas, y cómo puedes intercambiar mensaje cifrados con otras personas escribiendo un poco de código JavaScript.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/gold-padlock.jpg" /></entry><entry><title type="html">¿Qué aprender en 2020?</title><link href="http://blog.makeitreal.camp/que-aprender-en-2020/" rel="alternate" type="text/html" title="¿Qué aprender en 2020?" /><published>2020-01-17T02:00:00-05:00</published><updated>2020-01-17T02:00:00-05:00</updated><id>http://blog.makeitreal.camp/que-aprender-en-2020</id><content type="html" xml:base="http://blog.makeitreal.camp/que-aprender-en-2020/">&lt;p&gt;Asumiendo que ya encontraste un empleo como desarrollador (o estás en proceso de encontrar uno) ¿qué tecnologías aprender este nuevo año? Veamos algunas opciones interesantes.&lt;!-- more --&gt;&lt;/p&gt;

&lt;h3 id=&quot;un-framework-web&quot;&gt;Un framework Web&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; sería la opción obvia, pero si ya sabes React puedes aprender uno nuevo como &lt;a href=&quot;https://vuejs.org/&quot;&gt;Vue&lt;/a&gt; o &lt;a href=&quot;https://svelte.dev/&quot;&gt;Svelte&lt;/a&gt;. Sigue algunos tutoriales y mira si te inspiran a hacer algo propio. Intenta publicar lo que hagas en algún servicio de alojamiento de sitios estáticas como &lt;a href=&quot;https://www.netlify.com/&quot;&gt;Netlify&lt;/a&gt;, &lt;a href=&quot;https://surge.sh/&quot;&gt;Surge&lt;/a&gt; o &lt;a href=&quot;https://zeit.co/home&quot;&gt;Now&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;un-framework-móvil&quot;&gt;Un framework móvil&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/react-native/&quot;&gt;React Native&lt;/a&gt; te permite crear aplicaciones móviles para iOS y Android utilizando lo que ya sabes de React. &lt;a href=&quot;https://flutter.dev/&quot;&gt;Flutter&lt;/a&gt; es otra opción interesante (necesitas aprender un nuevo lenguaje de programación llamado &lt;a href=&quot;https://dart.dev/&quot;&gt;Dart&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Puedes seguir algunos tutoriales e intentar hacer algún proyecto propio, idealmente si incluye algo con la cámara, el acelerómetro o con geolocalización.&lt;/p&gt;

&lt;h3 id=&quot;un-lenguaje-de-programación&quot;&gt;Un lenguaje de programación&lt;/h3&gt;

&lt;p&gt;Si no has trabajado mucho con JavaScript, esa sería mi primera recomendación: es el momento de aprenderlo bien (ES6, programación asincrónica, etc.). Por otro lado, &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; es muy interesante porque te va a introducir al mundo de los lenguajes tipados (como Java o C++).&lt;/p&gt;

&lt;p&gt;Otras opciones incluyen Java, &lt;a href=&quot;https://golang.org/&quot;&gt;Go&lt;/a&gt;, &lt;a href=&quot;https://www.rust-lang.org/&quot;&gt;Rust&lt;/a&gt;, &lt;a href=&quot;https://elixir-lang.org/&quot;&gt;Elixir&lt;/a&gt; o &lt;a href=&quot;https://elm-lang.org/&quot;&gt;Elm&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Una forma en que puedes aprender un nuevo lenguaje de programación (asumiendo que ya sabes al menos uno) es la siguiente:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Estudia la sintaxis básica: tipos, variables, condicionales, ciclos, concatenación de strings, arreglos, funciones.&lt;/li&gt;
  &lt;li&gt;Crea el Hola Mundo que imprima algo en la consola. Después intenta pedirle información al usuario por la consola.&lt;/li&gt;
  &lt;li&gt;Investiga qué hace particular a este lenguaje, ¿cuál es su filosofía? ¿qué paradigmas utiliza (funcional, objetos, etc.)? ¿cómo se organiza el código y se utilizan librerías?&lt;/li&gt;
  &lt;li&gt;Aprende a leer y escribir archivos (p.e. lee un archivo con algún texto y escribe un nuevo archivo con cada palabra capitalizada).&lt;/li&gt;
  &lt;li&gt;Aprende a hacer una petición por HTTP (p.e. lista todos tus repositorios utilizando el API de Github).&lt;/li&gt;
  &lt;li&gt;Aprende a leer y escribir en una base de datos como PostgreSQL o MongoDB (acá seguramente vas a aprender cómo utilizar librerías).&lt;/li&gt;
  &lt;li&gt;Crea una aplicación Web con una ruta que retorne algo básico (investigar un poco qué librerías existen para esto).&lt;/li&gt;
  &lt;li&gt;Opcional. Aprende a escribir pruebas automatizadas.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Por último, si quieres profundizar en el lenguaje puedes inventarte algún proyecto pequeño para hacer.&lt;/p&gt;

&lt;h3 id=&quot;graphql&quot;&gt;GraphQL&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://graphql.org/&quot;&gt;GraphQL&lt;/a&gt; es un estándar para Web API’s que promete ser más eficiente, poderoso y flexible que la arquitectura REST. Fue inicialmente desarrollado en Facebook y ahora es de código abierto. Cada vez toma más fuerza y su comunidad está creciendo rápidamente.&lt;/p&gt;

&lt;p&gt;Hay un recurso muy interesante llamado &lt;a href=&quot;https://www.howtographql.com/&quot;&gt;How To GraphQL&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;machine-learning&quot;&gt;Machine Learning&lt;/h3&gt;

&lt;p&gt;Con la cantidad de información que estamos generando cada segundo en Internet, no es extraño que Machine Learning sea un área que está adquiriendo más importancia cada día.&lt;/p&gt;

&lt;p&gt;Recuerda que en Make it Real tenemos un &lt;a href=&quot;https://makeitreal.camp/data-science-online?utm_source=blog&amp;amp;utm_medium=web&amp;amp;utm_campaign=inbound&amp;amp;utm_content=post&quot;&gt;curso de 135 horas de Data Science&lt;/a&gt; que, además de Machine Learning, incluye extracción y visualización de datos ;)&lt;/p&gt;

&lt;h3 id=&quot;blockchain&quot;&gt;Blockchain&lt;/h3&gt;

&lt;p&gt;Lo interesante de esta tecnología son los conceptos que reúne: algoritmos de hashing, criptografía, árboles de Merkle, protocolos de comunicación y sistemas distribuidos, entre otros.&lt;/p&gt;

&lt;p&gt;Un libro interesante sería &lt;a href=&quot;https://github.com/bitcoinbook/bitcoinbook/&quot;&gt;Mastering Bitcoin - Programming the Open Blockchain&lt;/a&gt;, que está publicado gratis en Github.&lt;/p&gt;

&lt;h3 id=&quot;kung-fu&quot;&gt;Kung Fu&lt;/h3&gt;

&lt;p&gt;Vamos, no todo tiene que ser programación: un nuevo idioma, un instrumento, un deporte, las opciones son infinitas, lo importante es que nunca dejes de aprender!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;¿Qué te gustaría aprender de programación y por fuera de la programación? Cuéntanos en los comentarios!&lt;/p&gt;</content><author><name>Germán Escobar</name></author><summary type="html">Asumiendo que ya encontraste un empleo como desarrollador (o estás en proceso de encontrar uno) ¿qué tecnologías aprender este nuevo año? Veamos algunas opciones interesantes.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/neo-morpheus-kungfu.jpg" /></entry><entry><title type="html">Expresiones regulares</title><link href="http://blog.makeitreal.camp/expresiones-regulares/" rel="alternate" type="text/html" title="Expresiones regulares" /><published>2019-11-22T02:00:00-05:00</published><updated>2019-11-22T02:00:00-05:00</updated><id>http://blog.makeitreal.camp/expresiones-regulares</id><content type="html" xml:base="http://blog.makeitreal.camp/expresiones-regulares/">&lt;p&gt;Las expresiones regulares son una poderosa herramienta que todo programador debería conocer. En este post vamos a ver qué son, para qué sirven y cómo utilizarlas.&lt;!-- more --&gt;&lt;/p&gt;

&lt;h2 id=&quot;qué-son-las-expresiones-regulares&quot;&gt;¿Qué son las expresiones regulares?&lt;/h2&gt;

&lt;p&gt;Imagina que recibes un archivo de texto muy largo y te piden escribir un programa que encuentre todos los números telefónicos que existan en el archivo con el formato &lt;code class=&quot;highlighter-rouge&quot;&gt;(XXX) XXX-XXXX&lt;/code&gt;. ¿Cómo lo harías?&lt;/p&gt;

&lt;p&gt;Una &lt;strong&gt;expresión regular&lt;/strong&gt; (en inglés regular expression, regex ó regexp) es una secuencia de caracteres que define un patrón de búsqueda. Por ejemplo, con la siguiente expresión regular podríamos encontrar los números telefónicos con el formato que pedían:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;se&quot;&gt;\(\d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;3&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\)&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;3&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;-&lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;4&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;La principal crítica a las expresiones regulares es que son difíciles de leer y entender. Es una crítica válida. Sin embargo, las expresiones regulares también nos ofrecen muchas ventajas: pueden ahorrarnos muchas líneas de código, la gran mayoría son relativamente simples de construir o se encuentran fácilmente haciendo una &lt;strong&gt;búsqueda en Internet&lt;/strong&gt;, y se pueden utilizar en diferentes contextos como veremos a continuación.&lt;/p&gt;

&lt;h2 id=&quot;utilizando-expresiones-regulares&quot;&gt;Utilizando expresiones regulares&lt;/h2&gt;

&lt;p&gt;Las expresiones regulares se pueden utilizar en la mayoría de lenguajes de programación como JavaScript, Ruby, Python, Java, etc., en algunas aplicaciones para la línea de comandos como &lt;code class=&quot;highlighter-rouge&quot;&gt;grep&lt;/code&gt;  y &lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt; y en algunos editores de texto como &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt; o &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VSCode&lt;/a&gt; para realizar búsquedas avanzadas, entre muchos otros. Más adelante veremos cómo utilizarlas en JavaScript.&lt;/p&gt;

&lt;p&gt;Sin embargo, la forma más fácil de probar y depurar nuestras expresiones regulares es en algún sitio online como &lt;a href=&quot;https://regexr.com/&quot;&gt;regexr.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Generalmente las expresiones regulares se encierran entre dos barras inclinadas (&lt;code class=&quot;highlighter-rouge&quot;&gt;/.../&lt;/code&gt;) como lo haremos de ahora en adelante en este post.&lt;/p&gt;

&lt;h2 id=&quot;entendiendo-expresiones-regulares&quot;&gt;Entendiendo expresiones regulares&lt;/h2&gt;

&lt;p&gt;Empecemos con una expresión regular muy simple:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/abc/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Esta expresión busca una &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;a&quot;&lt;/code&gt; seguida de una &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;b&quot;&lt;/code&gt; seguida de una &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;c&quot;&lt;/code&gt;, todas minúsculas, así que coincidiría con textos que incluyeran &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;abc&quot;&lt;/code&gt; únicamente.&lt;/p&gt;

&lt;p&gt;¿Qué pasaría si quisiéramos buscar algo un poco más complejo como una &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;a&quot;&lt;/code&gt;, seguido de &lt;em&gt;cualquier caracter&lt;/em&gt;, seguido de una &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;b&quot;&lt;/code&gt;, por ejemplo &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;anc&quot;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;a7c&quot;&lt;/code&gt; o &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;ahc&quot;&lt;/code&gt;? La respuesta es que necesitamos unos caracteres especiales llamados &lt;strong&gt;metacaracteres&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Los metacaráteres nos permiten escribir expresiones más genéricas, y por lo tanto más útiles.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;El primer metacaráceter que vamos a ver es el punto (&lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt;), que indica que en esa posición puede ir cualquier caracter. Por ejemplo, para la pregunta previa utilizaríamos la siguiente expresión regular:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/a.c/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Esta expresión encontraría coincidencias para cadenas como &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;abc&quot;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;ajc&quot;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;a8c&quot;&lt;/code&gt; pero no  &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;abbc&quot;&lt;/code&gt; (tiene un caracter de más), &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;cba&quot;&lt;/code&gt; o &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;ac&quot;&lt;/code&gt; (falta un caracter en la mitad).&lt;/p&gt;

&lt;h3 id=&quot;cuantificadores&quot;&gt;Cuantificadores&lt;/h3&gt;

&lt;p&gt;Los siguientes metacaracteres nos permiten especificar cuántas ocurrencias del caracter anterior estamos esperando:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;: 0 o más ocurrencias del caracter anterior.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt;: 1 o más ocurrencias del caracter anterior.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt;: 0 o 1 ocurrencia del caracter anterior.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;/code&gt;: determinadas ocurrencias (exacto &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt; o un rango &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;3,6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Veamos un ejemplo de cada una de estas opciones:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/ab*c/&lt;/code&gt;: una &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;a&quot;&lt;/code&gt; seguida de cero o más &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;b&quot;&lt;/code&gt;s, seguido de una &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;c&quot;&lt;/code&gt; (p.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;ac&quot;&lt;/code&gt; o &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;abbbbbbbbc&quot;&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/ab+c/&lt;/code&gt;: una &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;a&quot;&lt;/code&gt; seguida de una o más &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;b&quot;&lt;/code&gt;, seguido de una &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;c&quot;&lt;/code&gt; (p.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;abc&quot;&lt;/code&gt; o &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;abbbbbc&quot;&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/ab?c/&lt;/code&gt;: una &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;a&quot;&lt;/code&gt; seguida de cero o una &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;b&quot;&lt;/code&gt;, seguido de una &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;c&quot;&lt;/code&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;ac&quot;&lt;/code&gt; o &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;abc&quot;&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/ab{3}c/&lt;/code&gt;: una &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;a&quot;&lt;/code&gt; seguida de tres &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;b&quot;&lt;/code&gt;, seguido de una &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;c&quot;&lt;/code&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;abbbc&quot;&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Algunos metacaracteres se pueden mezclar, así que podemos utilizar el &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; con alguno de los de cantidad que acabamos de ver, por ejemplo:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;La anterior podría ser la expresión regular más genérica del universo, busca cualquier caracter cero o más veces, y coincidiría con cualquier cadena de texto que le pasemos, incluso la cadena vacía!&lt;/p&gt;

&lt;h3 id=&quot;listas&quot;&gt;Listas&lt;/h3&gt;

&lt;p&gt;Los metacaracteres &lt;code class=&quot;highlighter-rouge&quot;&gt;[&lt;/code&gt; y &lt;code class=&quot;highlighter-rouge&quot;&gt;]&lt;/code&gt; nos permiten crear una lista de posibles caracteres que pueden ir en una posición.  Por ejemplo, si queremos buscar una &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;a&quot;&lt;/code&gt;, una &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;b&quot;&lt;/code&gt; o una &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;c&quot;&lt;/code&gt; (cualquiera de las tres) podríamos utilizar una lista:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/[abc]/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Utilizando guión (&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;) podemos crear rangos en una lista. Por ejemplo, si queremos buscar cualquier letra minúscula de la &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;a&quot;&lt;/code&gt; a la &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;z&quot;&lt;/code&gt; podríamos crear un rango:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/[a-z]/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Podemos tener varios rangos en la misma lista, por ejemplo si queremos buscar cualquier letra mayúscula o minúscula, o cualquier número, podemos utilizar la siguiente expresión:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/[a-zA-Z0-9]/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;El metacaracter &lt;code class=&quot;highlighter-rouge&quot;&gt;^&lt;/code&gt; tiene dos funciones. Si está dentro de una lista hace una negación, es decir, coincide con cualquier caracter que esté fuera del grupo. Por ejemplo, la siguiente expresión coincidiría con cualquier caracter excepto &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;a&quot;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;b&quot;&lt;/code&gt; o &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;c&quot;&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/^abc/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;inicio-o-fin-de-cadena&quot;&gt;Inicio o fin de cadena&lt;/h3&gt;

&lt;p&gt;El metacaracter &lt;code class=&quot;highlighter-rouge&quot;&gt;^&lt;/code&gt; también puede indicar el inicio de la cadena. Por ejemplo, la siguiente expresión coincidiría con cualquier cadena que empiece con &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;abc&quot;&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/^abc/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;También existe un metacaracter para indicar el fin de la cadena, el signo pesos (&lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt;). Por ejemplo, la expresión &lt;code class=&quot;highlighter-rouge&quot;&gt;/abc$/&lt;/code&gt; coincidiría con cualquier cadena que termine con &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;abc&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;escape&quot;&gt;Escape&lt;/h3&gt;

&lt;p&gt;Por último, tenemos el metacaracter &lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt; que nos permite escapar otros metacaracteres. Por ejemplo, la siguiente expresión regular coincidiría con una &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;a&quot;&lt;/code&gt; seguida de un punto, seguida de una &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;b&quot;&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/a&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;c/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Si no escapáramos el punto con el &lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt; coincidiría cualquier caracter en esa posición.&lt;/p&gt;

&lt;p&gt;Los paréntesis (&lt;code class=&quot;highlighter-rouge&quot;&gt;(&lt;/code&gt; y &lt;code class=&quot;highlighter-rouge&quot;&gt;)&lt;/code&gt;) también son metacaracteres que se utilizan para agrupar y extraer información pero no los vamos a cubrir en este post porque tienen su propia complejidad.&lt;/p&gt;

&lt;h3 id=&quot;atajos&quot;&gt;Atajos&lt;/h3&gt;

&lt;p&gt;Existen algunos atajos que nos permiten escribir expresiones regulares más compactas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\w&lt;/code&gt;: caracteres de palabras (&lt;code class=&quot;highlighter-rouge&quot;&gt;[a-zA-Z0-9_]&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\d&lt;/code&gt;: dígitos (&lt;code class=&quot;highlighter-rouge&quot;&gt;[0-9]&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\s&lt;/code&gt;: espacio en blanco (&lt;code class=&quot;highlighter-rouge&quot;&gt;[\t\r\n ]&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;También existen atajos de negación para los anteriores:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\W&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;[^\w]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\D&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;[^\d]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\S&lt;/code&gt; -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;[^\s]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;banderas-flags&quot;&gt;Banderas (flags)&lt;/h3&gt;

&lt;p&gt;Las banderas (flags) nos permiten darle más información a la expresión regular, por ejemplo si no queremos distinguir entre mayúsculas y minúsculas (la bandera &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt;), o si queremos encontrar todas las coincidencias en vez de la primera únicamente (la bandera &lt;code class=&quot;highlighter-rouge&quot;&gt;g&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Las banderas se ubican al final de la expresión regular, después de la última barra inclinada:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;abc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ig&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Las banderas más utilizadas son:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt;: no distingue entre mayúsculas y minúsculas.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;g&lt;/code&gt;: busca todas las coincidencias, no sólo la primera.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;nuestra-expresión-inicial&quot;&gt;Nuestra expresión inicial&lt;/h2&gt;

&lt;p&gt;Volvamos a nuestra expresión regular de los números telefónicos con el formato &lt;code class=&quot;highlighter-rouge&quot;&gt;(XXX) XXX-XXXX&lt;/code&gt; y la analizamos, pero primero agreguémosle las barras inclinadas a los lados y el flag &lt;code class=&quot;highlighter-rouge&quot;&gt;g&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/&lt;span class=&quot;se&quot;&gt;\(\d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;3&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\)&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;3&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;-&lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;4&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;/g
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\(\d{3}\)&lt;/code&gt;:  Con &lt;code class=&quot;highlighter-rouge&quot;&gt;\&lt;/code&gt; estamos escapando los paréntesis, que también son metacaracteres. &lt;code class=&quot;highlighter-rouge&quot;&gt;\d&lt;/code&gt; representa un dígito (0 a 9) y el cuantificador &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt; indica que estamos buscando 3 ocurrencias (3 dígitos en este caso).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; \d{3}&lt;/code&gt;: Seguimos con un espacio y otros tres dígitos.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;: No tenemos que escapar el guión porque solo es un metacaracter si está dentro de una lista (entre &lt;code class=&quot;highlighter-rouge&quot;&gt;[&lt;/code&gt; y &lt;code class=&quot;highlighter-rouge&quot;&gt;]&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\d{4}&lt;/code&gt;: los 4 dígitos finales.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Por último tenemos la bandera &lt;code class=&quot;highlighter-rouge&quot;&gt;g&lt;/code&gt; para que busque todas las coincidencias, no solo la primera.&lt;/p&gt;

&lt;h2 id=&quot;expresiones-regulares-en-javascript&quot;&gt;Expresiones regulares en JavaScript&lt;/h2&gt;

&lt;p&gt;En JavaScript hay dos formas de definir una expresión regular: encerrando la expresión entre barras inclinadas (&lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt;) o utilizando la función constructora &lt;code class=&quot;highlighter-rouge&quot;&gt;RegExp&lt;/code&gt; que recibe la expresión regular como un string (sin las barras) y, opcionalmente, las banderas como segundo argumento:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;regex1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(\d{3}\)&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt; &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\d{3}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\d{4}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;regex2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;RegExp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;\(\d{3}\) \d{3}-\d{4}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;g&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Como puedes ver en este ejemplo, las expresiones se pueden asignar a variables, pero también las puedes pasar como argumentos de funciones o pueden ser el valor de retorno de una función.&lt;/p&gt;

&lt;p&gt;Para validar si una cadena de texto cumple con el patrón de una expresión regular podemos utilizar el método &lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;regex1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(\d{3}\)&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt; &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\d{3}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\d{4}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;regex1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;(123) 123-1234&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;regex1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;123 123 1234&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Algunos métodos de los strings reciben expresiones regulares. Veamos algunos de ellos:&lt;/p&gt;

&lt;p&gt;El método &lt;code class=&quot;highlighter-rouge&quot;&gt;match&lt;/code&gt; recibe una expresión regular y retorna las coincidencias en un arreglo. Por ejemplo, si queremos encontrar todas las letras minúsculas de una cadena podríamos hacer lo siguiente:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a3b4c5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;a-z&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;El método &lt;code class=&quot;highlighter-rouge&quot;&gt;replace&lt;/code&gt; nos permite reemplazar parte de un string con otro string, muy útil, por ejemplo, cuando queremos ocultar información:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;(123) 123-1234&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(\d{3}\)&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt; &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\d{3}&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;(XXX) XXX&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// (XXX) XXX-1234&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;El método &lt;code class=&quot;highlighter-rouge&quot;&gt;search&lt;/code&gt; realiza una búsqueda sobre un string y retorna la posición de la primera coincidencia o -1 si no se encuentra ninguna:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a3b4c5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;El método &lt;code class=&quot;highlighter-rouge&quot;&gt;split&lt;/code&gt; nos permite dividir una cadena utilizando una expresión regular. Por ejemplo, si queremos separar la cadena por cualquier número:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a3b4c5d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;construyendo-una-expresión-regular-desde-cero&quot;&gt;Construyendo una expresión regular desde cero&lt;/h2&gt;

&lt;p&gt;Como ejercicio vamos a intentar construir una expresión regular para encontrar emails válidos.&lt;/p&gt;

&lt;p&gt;La característica más obvia de un email es el caracter &lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt;, así que podemos empezar con una expresión regular que busque cualquier secuencia de caracteres, seguido de &lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt;, seguido de otra secuencia de caracteres:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/.+@.+/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Utilizamos el cuantificador &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; en vez de &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; porque queremos que exista al menos un caracter a lado y lado de &lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt;. Pero esta expresión regular permitiría muchos emails inválidos. Para empezar acepta espacios en blanco y no está verificando la terminación del dominio (&lt;code class=&quot;highlighter-rouge&quot;&gt;.com&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;.camp&lt;/code&gt;, etc.), así que arreglemos eso:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/[&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;.-]+@[&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;-]+&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;a-z]&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;2,6&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Mucho mejor, pero esta expresión está lejos de ser perfecta, por ejemplo, un email no puede empezar con &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt; y existen más caracteres válidos.&lt;/p&gt;

&lt;p&gt;La verdad es que no hay una expresión regular perfecta en este caso. En &lt;a href=&quot;https://emailregex.com/&quot;&gt;esta página&lt;/a&gt; puedes encontrar varias alternativas, algunas increíblemente complejas aunque un poco más exactas. Sin embargo, personalmente prefiero sacrificar exactitud por simplicidad.&lt;/p&gt;

&lt;h3 id=&quot;práctica&quot;&gt;Práctica&lt;/h3&gt;

&lt;p&gt;Si quieres poner a prueba tus conocimientos en expresiones regulares, &lt;a href=&quot;http://play.inginf.units.it/#/&quot;&gt;esta página&lt;/a&gt; tiene varios ejercicios interesantes para practicar.&lt;/p&gt;

&lt;h2 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h2&gt;

&lt;p&gt;Las expresiones regulares pueden parecer indescifrables (¡algunas lo son!) pero son muy útiles cuando necesitamos encontrar patrones en un texto. Sin embargo, escribir una expresión regular desde cero no es trivial, así que una buena idea es buscar primero algunas opciones en Internet y seleccionar una que sea simple pero que funcione bien en la mayoría de casos.&lt;/p&gt;

&lt;p&gt;En este post vimos una introducción a las expresiones regulares. Espero que te haya ayudado a entender qué son, cómo funcionan y cuándo utilizarlas.&lt;/p&gt;</content><author><name>Germán Escobar</name></author><summary type="html">Las expresiones regulares son una poderosa herramienta que todo programador debería conocer. En este post vamos a ver qué son, para qué sirven y cómo utilizarlas.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/pillars.jpg" /></entry><entry><title type="html">¿Es valioso un certificado en desarrollo Web?</title><link href="http://blog.makeitreal.camp/es-valioso-un-certificado-en-desarrollo-web/" rel="alternate" type="text/html" title="¿Es valioso un certificado en desarrollo Web?" /><published>2018-01-15T02:00:00-05:00</published><updated>2018-01-15T02:00:00-05:00</updated><id>http://blog.makeitreal.camp/es-valioso-un-certificado-en-desarrollo-web</id><content type="html" xml:base="http://blog.makeitreal.camp/es-valioso-un-certificado-en-desarrollo-web/">&lt;p&gt;Aunque existen industrias donde las certificaciones son importantes, en desarrollo Web una certificación no te va a ayudar a encontrar un empleo. En este post te explicaremos por qué y cuál es la alternativa.&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;A comparación de otras industrias, el desarrollo Web es un campo muy reciente que sigue evolucionando rápidamente. Uno de nuestros mayores desafíos es que las tecnologías de hace 5 años (incluso menos) hoy ya son obsoletas.&lt;/p&gt;

&lt;p&gt;Aunque algunas empresas tradicionales todavía buscan personas con títulos en Ingeniería de Sistemas o Ciencias de la Computación como un primer filtro (la mayoría ya no lo hace), incluso esas empresas tienen sus propias pruebas técnicas y van a ignorar completamente tu certificado en desarrollo Web.&lt;/p&gt;

&lt;p&gt;Sin embargo, quizá nuestro principal argumento en contra de las certificaciones es que los títulos y las certificaciones corrompen el aprendizaje. En &lt;a href=&quot;https://makeitreal.camp/&quot; target=&quot;_blank&quot;&gt;Make it Real&lt;/a&gt; buscamos personas que estén más interesadas en aprender y crear, que en una certificación.&lt;/p&gt;

&lt;h2 id=&quot;en-vez-de-un-certificado&quot;&gt;En vez de un certificado&lt;/h2&gt;

&lt;p&gt;La mayoría de disciplinas requieren un aprendizaje continuo, pero en desarrollo Web mantenerse actualizado es particularmente importante. Es por eso que las empresas hoy se fijan más en lo que has creado y lo que sabes, que en tus títulos y certificados.&lt;/p&gt;

&lt;p&gt;En vez de buscar un certificado concéntrate en &lt;strong&gt;crear un portafolio&lt;/strong&gt;. Es la mejor forma de demostrar tus conocimientos y tu capacidad de aprendizaje. &lt;a href=&quot;http://sebastianzapata.co/&quot; target=&quot;_blank&quot;&gt;Mira cómo lo hizo Sebastián Zapata&lt;/a&gt;, uno de nuestros ex-alumnos que hoy trabaja para &lt;a href=&quot;https://cabify.com/en&quot; target=&quot;_blank&quot;&gt;Cabify&lt;/a&gt; en España.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Comparte tu conocimiento&lt;/strong&gt;. Ya sea a través de un blog o un canal de Youtube, compartir tu conocimiento te ayuda a reforzar tus conocimientos y a aumentar tu credibilidad frente a los demás. &lt;a href=&quot;https://medium.com/@estrada9166&quot; target=&quot;_blank&quot;&gt;Mira cómo lo hizo Alejandro Estrada&lt;/a&gt;, uno de nuestros ex-alumnos que hoy trabaja para una empresa de Estados Unidos llamada &lt;a href=&quot;https://www.payfully.co/&quot; target=&quot;_blank&quot;&gt;Payfully&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Asiste a encuentros con desarrolladores&lt;/strong&gt;. La forma más fácil es buscar comunidades en &lt;a href=&quot;https://www.meetup.com/&quot; target=&quot;_blank&quot;&gt;meetup.com&lt;/a&gt; y asistir a los encuentros. De esa forma vas a mantenerte actualizado(a), conocer otros desarrolladores e incluso encontrar oportunidades laborales. Mi recomendación es asistir con una actitud de aprendizaje, no esperar a que te ayuden a encontrar un empleo.&lt;/p&gt;

&lt;p&gt;Además de asisitir a los encuentros, &lt;strong&gt;prepara charlas y proponlas&lt;/strong&gt; a los organizadores. O, incluso mejor, &lt;strong&gt;inicia un nuevo Meetup&lt;/strong&gt; en tu ciudad! Así lo hizo Simón Hoyos, también ex-alumno de Make it Real, que es el co-organizador de &lt;a href=&quot;https://www.meetup.com/React-Medellin/&quot; target=&quot;_blank&quot;&gt;React en Medellín&lt;/a&gt; y hoy trabaja para &lt;a href=&quot;https://www.hugeinc.com/&quot; target=&quot;_blank&quot;&gt;HUGE Inc&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h2&gt;

&lt;p&gt;Existen muchas formas de demostrar credibilidad en desarrollo Web, pero un certificado definitivamente no es una de ellas.&lt;/p&gt;

&lt;p&gt;En &lt;a href=&quot;https://makeitreal.camp/&quot; target=&quot;_blank&quot;&gt;Make it Real&lt;/a&gt; te ofrecemos programas prácticos para que aceleres tu aprendizaje en desarrollo Web. Nuestro programa &lt;a href=&quot;https://makeitreal.camp/full-stack-online&quot; target=&quot;_blank&quot;&gt;Full Stack Web Development&lt;/a&gt; incluso tiene una garantía de empleo, que es algo mucho más valioso y tangible que un certificado.&lt;/p&gt;</content><author><name>Germán Escobar</name></author><summary type="html">Aunque existen industrias donde las certificaciones son importantes, en desarrollo Web una certificación no te va a ayudar a encontrar un empleo. En este post te explicaremos por qué y cuál es la alternativa.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/chess.jpeg" /></entry><entry><title type="html">Manejadores de paquetes en Node.js</title><link href="http://blog.makeitreal.camp/manejadores-de-paquetes-en-nodejs/" rel="alternate" type="text/html" title="Manejadores de paquetes en Node.js" /><published>2017-12-28T02:00:00-05:00</published><updated>2017-12-28T02:00:00-05:00</updated><id>http://blog.makeitreal.camp/manejadores-de-paquetes-en-nodejs</id><content type="html" xml:base="http://blog.makeitreal.camp/manejadores-de-paquetes-en-nodejs/">&lt;p&gt;Las librerías son una parte fundamental de cualquier lenguaje de programación y nos permiten reutilizar código que otros desarrolladores han escrito y publicado. En este post vamos a hablar de &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt; y &lt;a href=&quot;https://yarnpkg.com/en/&quot;&gt;Yarn&lt;/a&gt;, los dos manejadores de paquetes más populares de &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt;.&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;A las librerías se les llama &lt;strong&gt;paquetes&lt;/strong&gt; en &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Un &lt;strong&gt;manejador de paquetes&lt;/strong&gt; nos permite descargar los &lt;strong&gt;paquetes&lt;/strong&gt; que han publicado otros desarrolladores y utilizarlos en nuestros proyectos. También nos permite crear y publicar nuestros propios &lt;strong&gt;paquetes&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt; viene con un manejador de paquetes llamado &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;.  Sin embargo, hace un par de años surgió un nuevo manejador de paquetes llamado &lt;a href=&quot;https://yarnpkg.com/en/&quot;&gt;Yarn&lt;/a&gt; que cada día toma más fuerza. Veamos cada uno en detalle.&lt;/p&gt;

&lt;h2 id=&quot;npm&quot;&gt;npm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt; es una aplicación para la línea de comandos que viene incluída en &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt;, así que no es necesario instalar nada adicional.&lt;/p&gt;

&lt;h3 id=&quot;instalando-paquetes&quot;&gt;Instalando paquetes&lt;/h3&gt;

&lt;p&gt;Con &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt; puedes instalar un paquete en tu máquina de forma &lt;strong&gt;local&lt;/strong&gt; (en una carpeta) o &lt;strong&gt;global&lt;/strong&gt;, dependiendo de cómo lo vayas a utilizar.&lt;/p&gt;

&lt;p&gt;Si vas a utilizar el paquete en un proyecto debes instalarlo de forma &lt;strong&gt;local&lt;/strong&gt;, en la carpeta donde se encuentren los archivos del proyecto.&lt;/p&gt;

&lt;p&gt;Si el paquete es una aplicación para la línea de comandos es mejor instalarlo de forma &lt;strong&gt;global&lt;/strong&gt;, para que esté disponible desde cualquier ubicación en nuestro sistema.&lt;/p&gt;

&lt;h3 id=&quot;instalación-local&quot;&gt;Instalación local&lt;/h3&gt;

&lt;p&gt;Para instalar un paquete de forma &lt;strong&gt;local&lt;/strong&gt; utiliza el comando &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt; seguido del nombre del paquete. &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt; crea una carpeta llamada &lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; en la carpeta donde estés ubicado(a), y ahí instala el paquete.&lt;/p&gt;

&lt;p&gt;Por ejemplo, crea una carpeta llamada &lt;code class=&quot;highlighter-rouge&quot;&gt;npm-test&lt;/code&gt; e instala el paquete &lt;a href=&quot;https://github.com/marak/Faker.js/&quot;&gt;faker.js&lt;/a&gt;, que es una librería para generar datos ficticios ejecutando los siguientes comandos:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;mkdir npm-test
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;npm-test
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm install faker
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Revisa que exista la carpeta &lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; y que dentro de esa carpeta exista una carpeta llamada &lt;code class=&quot;highlighter-rouge&quot;&gt;faker&lt;/code&gt;. En un momento vamos a ver cómo utilizar este paquete desde tu código.&lt;/p&gt;

&lt;h3 id=&quot;instalación-global&quot;&gt;Instalación global&lt;/h3&gt;

&lt;p&gt;Instalar un paquete de forma &lt;strong&gt;global&lt;/strong&gt; es similar a instalar uno &lt;strong&gt;local&lt;/strong&gt;, la única diferencia es que se debe agregar la opción &lt;code class=&quot;highlighter-rouge&quot;&gt;-g&lt;/code&gt; al comando &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Por ejemplo, para instalar &lt;a href=&quot;https://github.com/workshopper/learnyounode&quot;&gt;learnyounode&lt;/a&gt;, un paquete que te enseña Node.js, ejecuta el siguiente comando desde cualquier ubicación:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm install -g learnyounode
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ahora verifica que haya quedado bien instalado ejecutando:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;learnyounode
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ese comando lo puedes ejecutar desde cualquier ubicación en tu sistema.&lt;/p&gt;

&lt;h3 id=&quot;usando-un-paquete-en-tu-código&quot;&gt;Usando un paquete en tu código&lt;/h3&gt;

&lt;p&gt;Para usar un paquete debes requerirlo con la función &lt;code class=&quot;highlighter-rouge&quot;&gt;require&lt;/code&gt;. Por ejemplo, en la misma carpeta donde instalaste &lt;a href=&quot;https://github.com/marak/Faker.js/&quot;&gt;faker.js&lt;/a&gt;, crea un archivo &lt;code class=&quot;highlighter-rouge&quot;&gt;index.js&lt;/code&gt; con el siguiente código:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;faker&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'faker'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;faker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;findName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ahora ejecútalo con el siguiente comando:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;node index.js
&lt;span class=&quot;s1&quot;&gt;'Dane Effertz'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;El resultado seguramente será diferente en tu caso.&lt;/p&gt;

&lt;p&gt;Nuestra recomendación es que siempre consultes la documentación del paquete para ver cómo requerirlo y usarlo.&lt;/p&gt;

&lt;h3 id=&quot;packagejson&quot;&gt;package.json&lt;/h3&gt;

&lt;p&gt;La mejor forma de de manejar paquetes en un proyecto es crear un archivo llamado &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; es un archivo con formato JSON dónde se definen los paquetes de los que depende nuestro proyecto (con sus respectivas versiones). De esa forma centralizas todas las dependencias y le facilitas la vida a otros colaboradores de tu proyecto.&lt;/p&gt;

&lt;p&gt;El archivo &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; debe estar en la raíz de tu proyecto y debe tener, como mínimo, un nombre y una versión como se muestra a continuación:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mi-super-paquete&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;El &lt;strong&gt;nombre&lt;/strong&gt; debe ser una palabra en minúscula sin espacios, puedes utilizar guión (&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;) y raya al piso (&lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;La &lt;strong&gt;versión&lt;/strong&gt; debe ser de la forma &lt;strong&gt;x.x.x&lt;/strong&gt; y debería seguir el &lt;strong&gt;&lt;a href=&quot;https://docs.npmjs.com/getting-started/semantic-versioning&quot;&gt;versionamiento semántico&lt;/a&gt;&lt;/strong&gt;, que define cuando incrementar cada uno de los números:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;El último número se incrementa cuando se corrigen bugs y se realizan cambios menores que no afectan funcionalidades existentes.&lt;/li&gt;
  &lt;li&gt;El segundo número se incrementa cuando se introducen funcionalidades y cambios que no afectan las funcionalidades existentes.&lt;/li&gt;
  &lt;li&gt;El primer número se incrementa cuando se introducen cambios que afectan funcionalidades existentes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sin embargo, la forma más fácil de generar el archivo &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; es con el comando &lt;code class=&quot;highlighter-rouge&quot;&gt;npm init&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;mi-proyecto
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm init
This utility will walk you through creating a package.json file.
It only covers the most common items, and tries to guess sensible defaults.

See &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;npm &lt;span class=&quot;nb&quot;&gt;help &lt;/span&gt;json&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;definitive documentation on these fields
and exactly what they &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;.

Use &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;npm install &amp;lt;pkg&amp;gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; afterwards to install a package and
save it as a dependency &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the package.json file.

Press ^C at any &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;to quit.
package name: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;mi-proyecto&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Oprime &lt;code class=&quot;highlighter-rouge&quot;&gt;Enter&lt;/code&gt; para aceptar los valores sugeridos entre paréntesis o ingresa tus propios valores. Al final se va a generar el archivo &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; con la información que ingresaste.&lt;/p&gt;

&lt;h3 id=&quot;agregando-dependencias&quot;&gt;Agregando dependencias&lt;/h3&gt;

&lt;p&gt;Existen dos tipos de dependencias que puedes agregar al &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;dependencies&lt;/strong&gt;: paquetes que son requeridos durante la ejecución del programa.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;devDependencies&lt;/strong&gt;: paquetes que se utilizan para desarrollo y pruebas.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Una forma de agregar dependencias a tu proyecto es agregándolas al archivo &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; directamente. Por ejemplo, si queremos agregar una dependencia de ejecución llamada &lt;code class=&quot;highlighter-rouge&quot;&gt;react&lt;/code&gt; y otra de desarrollo llamada &lt;code class=&quot;highlighter-rouge&quot;&gt;faker&lt;/code&gt; podemos hacerlo de la siguiente forma:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mi-super-paquete&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;react&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;devDependencies&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;faker&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;3.1.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Cada vez que modifiques manualmente el archivo &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; asegúrate de ejecutar el siguiente comando para que se instalen los paquetes que agregaste o cambiaste:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Sin embargo, la forma más fácil de agregar una dependencia es utilizando &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt; con la opción &lt;code class=&quot;highlighter-rouge&quot;&gt;--save&lt;/code&gt; o &lt;code class=&quot;highlighter-rouge&quot;&gt;--save-dev&lt;/code&gt;. Por ejemplo:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm install react --save
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm install faker --save-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Cuando descargues un proyecto que contenga un archivo &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; no olvides ejecutar &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt; para descargar todas las dependencias.&lt;/p&gt;

&lt;p&gt;La documentación completa de &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt; se encuentra en el siguiente enlace &lt;a href=&quot;https://docs.npmjs.com/&quot;&gt;https://docs.npmjs.com/&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;yarn&quot;&gt;Yarn&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://yarnpkg.com/en/&quot;&gt;Yarn&lt;/a&gt; fue el producto de la colaboración entre Facebook y Google para crear un mejor manejador de paquetes que &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;El primer paso para utilizar &lt;a href=&quot;https://yarnpkg.com/en/&quot;&gt;Yarn&lt;/a&gt; es instalarlo en tu máquina. Ingresa a &lt;a href=&quot;https://yarnpkg.com/en/docs/install&quot;&gt;este enlace&lt;/a&gt; donde encontrarás las instrucciones para tu sistema operativo.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://yarnpkg.com/en/&quot;&gt;Yarn&lt;/a&gt; es compatible con &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;, así que puedes utilizar el mismo archivo &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;. Los comandos también son muy similares, la diferencia más importante es que en vez de &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt; se utiliza &lt;code class=&quot;highlighter-rouge&quot;&gt;yarn add&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para inicializar un nuevo proyecto utiliza:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;yarn init
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Para agregar una dependencia de ejecución de forma &lt;strong&gt;local&lt;/strong&gt; utiliza:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;yarn add &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;paquete]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Para agregar una dependencia de desarrollo o pruebas de forma &lt;strong&gt;local&lt;/strong&gt; utiliza:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;yarn add &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;paquete] --dev
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Para instalar las dependencias de un proyecto (cuando has hecho cambios al &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; o has descargado un nuevo proyecto):&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;yarn install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Para instalar un paquete de forma &lt;strong&gt;global&lt;/strong&gt; utiliza:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;yarn global add &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;paquete]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;La documentación completa de &lt;a href=&quot;https://yarnpkg.com/en/&quot;&gt;Yarn&lt;/a&gt; se encuentra en el siguiente enlace: &lt;a href=&quot;https://yarnpkg.com/en/docs&quot;&gt;https://yarnpkg.com/en/docs&lt;/a&gt;.&lt;/p&gt;</content><author><name>Germán Escobar</name></author><summary type="html">Las librerías son una parte fundamental de cualquier lenguaje de programación y nos permiten reutilizar código que otros desarrolladores han escrito y publicado. En este post vamos a hablar de npm y Yarn, los dos manejadores de paquetes más populares de Node.js.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/boxes.jpeg" /></entry><entry><title type="html">Introducción a Node.js</title><link href="http://blog.makeitreal.camp/introduccion-a-nodejs/" rel="alternate" type="text/html" title="Introducción a Node.js" /><published>2017-12-25T02:00:00-05:00</published><updated>2017-12-25T02:00:00-05:00</updated><id>http://blog.makeitreal.camp/introduccion-a-nodejs</id><content type="html" xml:base="http://blog.makeitreal.camp/introduccion-a-nodejs/">&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; es una plataforma que nos permite ejecutar código JavaScript fuera del navegador. En este post explicaremos cómo empezar con &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt;, qué tipo de aplicaciones puedes construir y una introducción a su poderoso manejador de paquetes.&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;Muchas personas creen que &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; se utiliza sólo para crear aplicaciones Web, pero esto no es cierto. Con &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; puedes hacer mucho más que eso. &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; es equivalente a otros lenguajes de programación como Ruby, Python y Java, por nombrar algunos.&lt;/p&gt;

&lt;p&gt;Todo lo que sabes actualmente de JavaScript te va a servir para crear aplicaciones con &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; (variables, condicionales, ciclos, arreglos, etc.). Sin embargo, con Node.js puedes hacer cosas que no se pueden hacer dentro del navegador como:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Manipular archivos del sistema (crear, editar, eliminar, etc.).&lt;/li&gt;
  &lt;li&gt;Crear aplicaciones para la línea de comandos.&lt;/li&gt;
  &lt;li&gt;Crear aplicaciones móviles.&lt;/li&gt;
  &lt;li&gt;Crear aplicaciones de escritorio.&lt;/li&gt;
  &lt;li&gt;Y, claro, crear aplicaciones Web.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;primeros-pasos&quot;&gt;Primeros pasos&lt;/h2&gt;

&lt;p&gt;Para empezar con &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; debes primero descargarlo e instalarlo en tu maquina. Abre &lt;a href=&quot;https://github.com/makeitrealcamp/node-installation&quot; target=&quot;_blank&quot;&gt;este enlace&lt;/a&gt; y sigue las instrucciones para tu sistema operativo.&lt;/p&gt;

&lt;p&gt;Asegúrate que haya sido correctamente instalado abriendo una línea de comandos y ejecutando &lt;code class=&quot;highlighter-rouge&quot;&gt;node -v&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;node -v
v10.7.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Aunque la versión puede ser diferente, asegúrate que sea una reciente, preferiblemente mayor a 9.0.0.&lt;/p&gt;

&lt;p&gt;Existen dos formas de ejecutar código en &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt;. La primera es utilizando el interpretador. Abre una línea de comandos y ejecuta lo siguiente:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;node
&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ahí puedes empezar a escribir expresiones de JavaScript, por ejemplo &lt;code class=&quot;highlighter-rouge&quot;&gt;1 + 1&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt; &lt;/span&gt;1 + 1
2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Para salir de la consola de &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; oprime &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + D&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;La segunda forma de ejecutar código en &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; es creando un archivo y ejecutándolo. Por ejemplo, crea un archivo llamado &lt;code class=&quot;highlighter-rouge&quot;&gt;app.js&lt;/code&gt; y escribe lo siguiente:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Mi primer programa en Node.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Guárdalo y ejecutalo con el siguiente comando:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;node app.js
Mi primer programa en Node.js
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Felicitaciones, has escrito tu primer programa en &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt;!&lt;/p&gt;

&lt;h2 id=&quot;algo-más-interesante&quot;&gt;Algo más interesante&lt;/h2&gt;

&lt;p&gt;Veamos el siguiente ejemplo que va a crear un archivo en nuestra máquina. Empieza transcribiendo el siguiente programa en un archivo llamado &lt;code class=&quot;highlighter-rouge&quot;&gt;generarArchivo.js&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;writeFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hola.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hola Mundo!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;El archivo fue creado correctamente&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Este código lo copié de Internet, que es la forma más fácil de hacer cualquier cosa en programación ;) Pero si quieres saber qué está haciendo este código acá va.&lt;/p&gt;

&lt;p&gt;En la primera línea estamos requiriendo un módulo. Un módulo es como una librería, que nos va a permitir hacer algo específico.&lt;/p&gt;

&lt;p&gt;El módulo &lt;code class=&quot;highlighter-rouge&quot;&gt;fs&lt;/code&gt; (file system) es el que nos va a permitir manipular archivos. Existen módulos que están incluidos con &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; (como &lt;code class=&quot;highlighter-rouge&quot;&gt;fs&lt;/code&gt;) y otros que puedes utilizar por medio de librerías externas.&lt;/p&gt;

&lt;p&gt;Para ejecutar este programa ingresa el comando &lt;code class=&quot;highlighter-rouge&quot;&gt;node generarArchivo.js&lt;/code&gt; en la consola, deberías ver el mensaje “El archivo fue creado correctamente”:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;node generarArchivo.js
El archivo fue creado correctamente
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Asegúrate de que se haya creado un archivo llamado &lt;code class=&quot;highlighter-rouge&quot;&gt;nuevo.txt&lt;/code&gt; en la misma carpeta donde está el programa y que tenga el siguiente contenido:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;Primera línea
Segunda línea
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;un-servidor-web&quot;&gt;Un servidor Web&lt;/h2&gt;

&lt;p&gt;Uno de los primeros programas de ejemplo que se muestran cuando se habla de &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; es un servidor Web. Quizá esa sea la razón por la que muchos que creen que &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; se usa exclusivamente para crear aplicaciones Web.&lt;/p&gt;

&lt;p&gt;Para crear un servidor Web necesitamos el módulo &lt;code class=&quot;highlighter-rouge&quot;&gt;http&lt;/code&gt;. Crea un archivo llamado &lt;code class=&quot;highlighter-rouge&quot;&gt;server.js&lt;/code&gt; y transcribe el siguiente código:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'http'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;h1&amp;gt;Hello World&amp;lt;h1&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Server&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;running&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//localhost:3000/`);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Para ejecutar esta aplicación utiliza el siguiente comando:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;node server.js
Server running at http://localhost:3000/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ahora ingresa desde un navegador a http://localhost:3000/. Debes ver el texto “Hola Mundo”.&lt;/p&gt;

&lt;p&gt;Para detener el servidor oprime &lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + C&lt;/code&gt; en la consola.&lt;/p&gt;

&lt;h2 id=&quot;librerías-con-npm&quot;&gt;Librerías con npm&lt;/h2&gt;

&lt;p&gt;Hasta ahora hemos usado módulos que vienen incluidos con &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; como &lt;a href=&quot;[&quot;&gt;fs&lt;/a&gt; y &lt;a href=&quot;https://nodejs.org/api/http.html&quot;&gt;http&lt;/a&gt;. Sin embargo, el gran poder de &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; viene de las &lt;strong&gt;librerías externas&lt;/strong&gt;: código que escriben y publican otros desarrolladores y que podemos utilizar en nuestros proyectos.&lt;/p&gt;

&lt;p&gt;Las librerías en &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; se conocen con el nombre de &lt;strong&gt;paquetes&lt;/strong&gt;. Existen &lt;strong&gt;paquetes&lt;/strong&gt; casi para todo lo que te puedas imaginar. Algunos ejemplos incluyen:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;[https://www.npmjs.com/package/currency-converter&quot;&gt;currency-converter&lt;/a&gt; permite realizar conversiones entre monedas.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;[minifier]https://www.npmjs.com/package/minifier&quot;&gt;minifier&lt;/a&gt; permite minificar archivos de JS y CSS.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;[lorem-ipsum]https://www.npmjs.com/package/lorem-ipsum&quot;&gt;lorem-ipsum&lt;/a&gt; permite generar textos de ejemplo.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;[express]https://www.npmjs.com/package/express&quot;&gt;express&lt;/a&gt; permite crear aplicaciones Web.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/fb&quot;&gt;fb&lt;/a&gt; permite interactuar con el API de Facebook&lt;/li&gt;
  &lt;li&gt;Entre cientos de miles más!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; viene con un manejador de paquetes llamado &lt;a href=&quot;https://www.npmjs.org/&quot; target=&quot;_blank&quot;&gt;npm&lt;/a&gt;, que es realmente una aplicación de consola que te va a permitir instalar y manejar los paquetes que se encuentran en el repositorio central de &lt;a href=&quot;https://www.npmjs.org/&quot; target=&quot;_blank&quot;&gt;npm&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Por ejemplo, para instalar &lt;a href=&quot;https://github.com/workshopper/learnyounode&quot; target=&quot;_blank&quot;&gt;learnyounode&lt;/a&gt;, un paquete que te enseña &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt;, ejecuta el siguiente comando:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm install -g learnyounode
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ahora verifica que haya quedado bien instalado ejecutando el comando &lt;code class=&quot;highlighter-rouge&quot;&gt;learnyounode&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;learnyounode
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Y sigue aprendiendo &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;En la siguiente post vamos a hablar en más detalle de &lt;a href=&quot;https://www.npmjs.org/&quot; target=&quot;_blank&quot;&gt;npm&lt;/a&gt; y otro manejador de paquetes llamado &lt;a href=&quot;https://yarnpkg.com/en/&quot; target=&quot;_blank&quot;&gt;Yarn&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; &lt;strong&gt;no&lt;/strong&gt; es un nuevo lenguaje de programación, es una plataforma que te va a permitir ejecutar código JavaScript por fuera del navegador.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Con &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; puedes crear cualquier programa o aplicación que podrías crear con otro lenguaje de uso general como Java, Ruby, C++ o Python.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;El gran poder de &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt; se encuentra en las librerías (llamadas &lt;strong&gt;paquetes&lt;/strong&gt;) y en la comunidad de programadores que las escriben y las publican sin costo alguno!&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Germán Escobar</name></author><summary type="html">Node.js es una plataforma que nos permite ejecutar código JavaScript fuera del navegador. En este post explicaremos cómo empezar con Node.js, qué tipo de aplicaciones puedes construir y una introducción a su poderoso manejador de paquetes.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/nodejs.jpg" /></entry><entry><title type="html">Lenguajes compilados e interpretados</title><link href="http://blog.makeitreal.camp/lenguajes-compilados-e-interpretados/" rel="alternate" type="text/html" title="Lenguajes compilados e interpretados" /><published>2017-11-06T02:00:00-05:00</published><updated>2017-11-06T02:00:00-05:00</updated><id>http://blog.makeitreal.camp/lenguajes-compilados-e-interpretados</id><content type="html" xml:base="http://blog.makeitreal.camp/lenguajes-compilados-e-interpretados/">&lt;p&gt;C, C++ y Go son lenguajes de programación &lt;strong&gt;compilados&lt;/strong&gt;. JavaScript, Python y Ruby son lenguajes &lt;strong&gt;interpretados&lt;/strong&gt;. ¿Cuál es la diferencia y las ventajas/desventajas de un lenguaje compilado versus uno interpretado? En este post lo vamos a explicar.&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;Tanto &lt;strong&gt;compiladores&lt;/strong&gt; como &lt;strong&gt;interpretadores&lt;/strong&gt; son programas que convierten el código que escribes a &lt;strong&gt;lenguaje de máquina&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lenguaje de máquina&lt;/strong&gt; son las instrucciones que entiende el computador (el procesador para ser más exactos) en código binario (unos y ceros).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/code-to-machine.png&quot; alt=&quot;Lenguaje de alto nivel a lenguaje de máquina&quot; class=&quot;photo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;La principal diferencia entre un lenguaje compilado y uno interpretado es que el &lt;strong&gt;lenguaje compilado&lt;/strong&gt; requiere un paso adicional antes de ser ejecutado, la compilación, que convierte el código que escribes a &lt;strong&gt;lenguaje de máquina&lt;/strong&gt;. Un &lt;strong&gt;lenguaje interpretado&lt;/strong&gt;, por otro lado, es convertido a &lt;strong&gt;lenguaje de máquina&lt;/strong&gt; a medida que es ejecutado.&lt;/p&gt;

&lt;p&gt;Ejemplos de &lt;strong&gt;lenguajes compilados&lt;/strong&gt; incluyen C, C++, Java, Go y Rust, entre muchos otros. Ejemplos de &lt;strong&gt;lenguajes interpretados&lt;/strong&gt; incluyen Ruby, Python y JavaScript, entre muchos otros. A todos estos lenguajes se les conoce como &lt;strong&gt;lenguajes de alto nivel&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Veamos un ejemplo de cada uno.&lt;/p&gt;

&lt;h2 id=&quot;un-ejemplo-de-lenguaje-interpretado&quot;&gt;Un ejemplo de lenguaje interpretado&lt;/h2&gt;

&lt;p&gt;Ruby es un lenguaje interpretado, así que podemos crear un archivo llamado &lt;code class=&quot;highlighter-rouge&quot;&gt;hola.rb&lt;/code&gt; con el siguiente código, o cualquier código válido en Ruby (a esto se le conoce como el &lt;strong&gt;código fuente&lt;/strong&gt;):&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hola Mundo&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Y ejecutarlo directamente ingresando el siguiente comando en la consola:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ruby hello.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Te debería aparecer debajo la cadena “Hola Mundo“.  Si quieres puedes cambiar el código fuente y volverlo a ejecutar.&lt;/p&gt;

&lt;h2 id=&quot;un-ejemplo-de-lenguaje-compilado&quot;&gt;Un ejemplo de lenguaje compilado&lt;/h2&gt;

&lt;p&gt;Un lenguaje compilado tiene un paso adicional. Si tienes un compilador de C como &lt;a href=&quot;https://gcc.gnu.org/&quot; target=&quot;_blank&quot;&gt;gcc&lt;/a&gt; puedes crear un archivo llamado &lt;code class=&quot;highlighter-rouge&quot;&gt;hello.c&lt;/code&gt;  con el siguiente contenido, o cualquier código válido en C:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hola Mundo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Antes de ejecutarlo debes compilarlo con el siguiente comando:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;gcc hello.c -o hello
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Eso crea un archivo llamado &lt;code class=&quot;highlighter-rouge&quot;&gt;hello&lt;/code&gt; (sin extensión) con el código de máquina (llamado el ejecutable) que puedes correr en la consola con el siguiente comando:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;./hello
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Te debería aparecer la cadena de texto “Hola Mundo” debajo. Si necesitas cambiar el código fuente debes volverlo a compilar y ejecutarlo nuevamente.&lt;/p&gt;

&lt;h2 id=&quot;ventajas-y-desventajas&quot;&gt;Ventajas y desventajas&lt;/h2&gt;

&lt;p&gt;En general, &lt;strong&gt;el ciclo de desarrollo (el tiempo entre el momento en que escribes el código y lo pruebas) es más rápido en un lenguaje interpretado&lt;/strong&gt;. Eso se debe a que en lenguajes compilados es necesario realizar el proceso de compilación cada vez que cambias el código fuente, aunque con herramientas adicionales se puede automatizar.&lt;/p&gt;

&lt;p&gt;Otra desventaja de un lenguaje compilado es que cuando compilas un programa debes crear ejecutables para cada uno de los sistemas operativos en los que lo vayas a utilizar. Un ejecutable creado para Linux no va a servir en Windows por ejemplo.&lt;/p&gt;

&lt;p&gt;Sin embargo, &lt;strong&gt;un lenguaje compilado es mucho más rápido que uno interpretado&lt;/strong&gt;. Esto se debe a que cuando es ejecutado ya se encuentra en código de máquina y eso también le permite hacer algunas optimizaciones que no son posibles con un lenguaje interpretado.&lt;/p&gt;

&lt;p&gt;Además de la velocidad, otra desventaja de un lenguaje interpretado es que, para ser ejecutado, debes tener instalado el interpretador. Esto no es necesario en un lenguaje compilado que es convertido a lenguaje de máquina&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;En general, &lt;strong&gt;un lenguaje compilado está optimizado para el momento de la ejecución&lt;/strong&gt;, aunque esto signifique una carga adicional para el programador. Por otro lado, &lt;strong&gt;un lenguaje interpretado está optimizado para hacerle la vida más fácil al programador&lt;/strong&gt;, aunque eso signifique una carga adicional para la máquina.&lt;/p&gt;

&lt;h2 id=&quot;el-caso-de-java&quot;&gt;El caso de Java&lt;/h2&gt;

&lt;p&gt;Java es un lenguaje particular porque es compilado, pero es compilado a un lenguaje intermedio llamado &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_bytecode&quot; target=&quot;_blank&quot;&gt;bytecode&lt;/a&gt;, que después es interpretado. Los creadores de Java querían crear un lenguaje compilado, pero que se pudiera ejecutar en cualquier sistema operativo y procesador sin necesidad de crear varios ejecutables.&lt;/p&gt;

&lt;p&gt;Es por eso que si quieres ejecutar código Java debes instalar el &lt;a href=&quot;https://java.com/es/download/&quot; target=&quot;_blank&quot;&gt;JRE (Java Runtime Environment)&lt;/a&gt;, que es el programa que se encarga de interpretar el &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_bytecode&quot; target=&quot;_blank&quot;&gt;bytecode&lt;/a&gt; al que son compilados los programas de Java.&lt;/p&gt;

&lt;p&gt;Si deseas compilar código Java no es suficiente instalar el JRE, necesitas el &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/index.html&quot; target=&quot;_blank&quot;&gt;JDK (Java Development Kit)&lt;/a&gt; que incluye el compilador, entre otras herramientas de desarrollo.&lt;/p&gt;

&lt;p&gt;Otros lenguajes que están siguiendo este mismo modelo incluyen Elixir y C#, entre otros.&lt;/p&gt;

&lt;h2 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h2&gt;

&lt;p&gt;Se puede decir que los lenguajes de alto nivel se pueden dividir en tres ramas: puramente compilados (C++, Go, etc.), parcialmente compilados  (Java, Elixir, etc.)  e interpretados (Ruby, JavaScript, etc.).&lt;/p&gt;

&lt;p&gt;Sin embargo, la brecha entre estas ramas cada vez es menor. Hoy existen lenguajes compilados a lenguaje de máquina como Go y Rust que se inclinan cada vez más en la productividad y felicidad del programador mientras que los lenguajes interpretados son cada vez más rápidos en ejecución.&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Como vamos a ver adelante existen lenguajes compilados que no son convertidos directamente a lenguaje de máquina sino a un lenguaje intermedio.&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Germán Escobar</name></author><summary type="html">C, C++ y Go son lenguajes de programación compilados. JavaScript, Python y Ruby son lenguajes interpretados. ¿Cuál es la diferencia y las ventajas/desventajas de un lenguaje compilado versus uno interpretado? En este post lo vamos a explicar.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://blog.makeitreal.camp/assets/images/bg-images/lights-exposure.jpeg" /></entry></feed>